
build/forLab3.elf:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
20000000:	4807      	ldr	r0, [pc, #28]	@ (20000020 <startup+0x20>)
20000002:	4685      	mov	sp, r0
20000004:	f000 fb74 	bl	200006f0 <md407_runtime_clockinit>
20000008:	f000 fb3e 	bl	20000688 <md407_runtime_portinit>
2000000c:	f000 faa6 	bl	2000055c <md407_runtime_uartinit>
20000010:	f000 fa4c 	bl	200004ac <_crt_init>
20000014:	f000 f9f2 	bl	200003fc <main>
20000018:	f000 fa78 	bl	2000050c <_crt_deinit>
2000001c:	e7fe      	b.n	2000001c <startup+0x1c>
2000001e:	0000      	.short	0x0000
20000020:	20002800 	.word	0x20002800

20000024 <InitSquareWave>:

typedef void (*VoidFunction)(void);

// I den här funktionen skall lägre byten av Port E förberedas för att lägga
// ut en signal på pinne 0. Den skall bara kallas en gång.
void InitSquareWave(){
20000024:	b580      	push	{r7, lr}
20000026:	af00      	add	r7, sp, #0
    *GPIO_E_MODER = 0x55555555; // sätter pinne 0 till output
20000028:	4b07      	ldr	r3, [pc, #28]	@ (20000048 <InitSquareWave+0x24>)
2000002a:	4a08      	ldr	r2, [pc, #32]	@ (2000004c <InitSquareWave+0x28>)
2000002c:	601a      	str	r2, [r3, #0]
    *GPIO_E_Otyper = 0x0000;
2000002e:	4b08      	ldr	r3, [pc, #32]	@ (20000050 <InitSquareWave+0x2c>)
20000030:	2200      	movs	r2, #0
20000032:	801a      	strh	r2, [r3, #0]
    *GPIO_E_Pupdr = 0x55555555;
20000034:	4b07      	ldr	r3, [pc, #28]	@ (20000054 <InitSquareWave+0x30>)
20000036:	4a05      	ldr	r2, [pc, #20]	@ (2000004c <InitSquareWave+0x28>)
20000038:	601a      	str	r2, [r3, #0]
    *GPIO_E_Ospeedr = 0x00000000;
2000003a:	4b07      	ldr	r3, [pc, #28]	@ (20000058 <InitSquareWave+0x34>)
2000003c:	2200      	movs	r2, #0
2000003e:	601a      	str	r2, [r3, #0]
    //*GPIO_E_ODRLOW = 1;

}
20000040:	46c0      	nop			@ (mov r8, r8)
20000042:	46bd      	mov	sp, r7
20000044:	bd80      	pop	{r7, pc}
20000046:	46c0      	nop			@ (mov r8, r8)
20000048:	40021000 	.word	0x40021000
2000004c:	55555555 	.word	0x55555555
20000050:	40021004 	.word	0x40021004
20000054:	4002100c 	.word	0x4002100c
20000058:	40021008 	.word	0x40021008

2000005c <delay_250ns>:

void delay_250ns(void)
{
2000005c:	b580      	push	{r7, lr}
2000005e:	af00      	add	r7, sp, #0
    *STK_CTRL = 0;
20000060:	4b0c      	ldr	r3, [pc, #48]	@ (20000094 <delay_250ns+0x38>)
20000062:	2200      	movs	r2, #0
20000064:	601a      	str	r2, [r3, #0]
    *STK_LOAD = 0x00000029; // 42Hz = 250ns, 42 (dec) = 29 (hex)
20000066:	4b0c      	ldr	r3, [pc, #48]	@ (20000098 <delay_250ns+0x3c>)
20000068:	2229      	movs	r2, #41	@ 0x29
2000006a:	601a      	str	r2, [r3, #0]
    *STK_VAL = 0;
2000006c:	4b0b      	ldr	r3, [pc, #44]	@ (2000009c <delay_250ns+0x40>)
2000006e:	2200      	movs	r2, #0
20000070:	601a      	str	r2, [r3, #0]
    *STK_CTRL = 5;
20000072:	4b08      	ldr	r3, [pc, #32]	@ (20000094 <delay_250ns+0x38>)
20000074:	2205      	movs	r2, #5
20000076:	601a      	str	r2, [r3, #0]

    while ((*STK_CTRL & 0x00010000) == 0)
20000078:	46c0      	nop			@ (mov r8, r8)
2000007a:	4b06      	ldr	r3, [pc, #24]	@ (20000094 <delay_250ns+0x38>)
2000007c:	681a      	ldr	r2, [r3, #0]
2000007e:	2380      	movs	r3, #128	@ 0x80
20000080:	025b      	lsls	r3, r3, #9
20000082:	4013      	ands	r3, r2
20000084:	d0f9      	beq.n	2000007a <delay_250ns+0x1e>
        ;
    *STK_CTRL = 0;
20000086:	4b03      	ldr	r3, [pc, #12]	@ (20000094 <delay_250ns+0x38>)
20000088:	2200      	movs	r2, #0
2000008a:	601a      	str	r2, [r3, #0]
}
2000008c:	46c0      	nop			@ (mov r8, r8)
2000008e:	46bd      	mov	sp, r7
20000090:	bd80      	pop	{r7, pc}
20000092:	46c0      	nop			@ (mov r8, r8)
20000094:	e000e010 	.word	0xe000e010
20000098:	e000e014 	.word	0xe000e014
2000009c:	e000e018 	.word	0xe000e018

200000a0 <delay_mikro>:
// När man kallat den här funktionen skall en fyrkantsvåg med given period
// (i mikrosekunder) läggas ut på pinne 0, Port E. Perioden skall kunna
// vara upp till 99000 mikrosekunder.

void delay_mikro(unsigned int us)
{
200000a0:	b580      	push	{r7, lr}
200000a2:	b084      	sub	sp, #16
200000a4:	af00      	add	r7, sp, #0
200000a6:	6078      	str	r0, [r7, #4]
#ifdef SIMULATOR
    us = us / 1000;
    us++;
#else
    for (unsigned int i = 0; i <= us; i++)
200000a8:	2300      	movs	r3, #0
200000aa:	60fb      	str	r3, [r7, #12]
200000ac:	e00a      	b.n	200000c4 <delay_mikro+0x24>
    {
        delay_250ns();
200000ae:	f7ff ffd5 	bl	2000005c <delay_250ns>
        delay_250ns();
200000b2:	f7ff ffd3 	bl	2000005c <delay_250ns>
        delay_250ns();
200000b6:	f7ff ffd1 	bl	2000005c <delay_250ns>
        delay_250ns();
200000ba:	f7ff ffcf 	bl	2000005c <delay_250ns>
    for (unsigned int i = 0; i <= us; i++)
200000be:	68fb      	ldr	r3, [r7, #12]
200000c0:	3301      	adds	r3, #1
200000c2:	60fb      	str	r3, [r7, #12]
200000c4:	68fa      	ldr	r2, [r7, #12]
200000c6:	687b      	ldr	r3, [r7, #4]
200000c8:	429a      	cmp	r2, r3
200000ca:	d9f0      	bls.n	200000ae <delay_mikro+0xe>
    }
#endif
}
200000cc:	46c0      	nop			@ (mov r8, r8)
200000ce:	46c0      	nop			@ (mov r8, r8)
200000d0:	46bd      	mov	sp, r7
200000d2:	b004      	add	sp, #16
200000d4:	bd80      	pop	{r7, pc}

200000d6 <read_column>:
int read_column()
{
200000d6:	b580      	push	{r7, lr}
200000d8:	b082      	sub	sp, #8
200000da:	af00      	add	r7, sp, #0

    unsigned char c = *GPIO_E_IDrHigh;
200000dc:	4a12      	ldr	r2, [pc, #72]	@ (20000128 <read_column+0x52>)
200000de:	1dfb      	adds	r3, r7, #7
200000e0:	7812      	ldrb	r2, [r2, #0]
200000e2:	701a      	strb	r2, [r3, #0]

    if (c & 0b1000)
200000e4:	1dfb      	adds	r3, r7, #7
200000e6:	781b      	ldrb	r3, [r3, #0]
200000e8:	2208      	movs	r2, #8
200000ea:	4013      	ands	r3, r2
200000ec:	d001      	beq.n	200000f2 <read_column+0x1c>
        return 4;
200000ee:	2304      	movs	r3, #4
200000f0:	e015      	b.n	2000011e <read_column+0x48>

    if (c & 0b0100)
200000f2:	1dfb      	adds	r3, r7, #7
200000f4:	781b      	ldrb	r3, [r3, #0]
200000f6:	2204      	movs	r2, #4
200000f8:	4013      	ands	r3, r2
200000fa:	d001      	beq.n	20000100 <read_column+0x2a>
        return 3;
200000fc:	2303      	movs	r3, #3
200000fe:	e00e      	b.n	2000011e <read_column+0x48>

    if (c & 0b0010)
20000100:	1dfb      	adds	r3, r7, #7
20000102:	781b      	ldrb	r3, [r3, #0]
20000104:	2202      	movs	r2, #2
20000106:	4013      	ands	r3, r2
20000108:	d001      	beq.n	2000010e <read_column+0x38>
        return 2;
2000010a:	2302      	movs	r3, #2
2000010c:	e007      	b.n	2000011e <read_column+0x48>

    if (c & 0b0001)
2000010e:	1dfb      	adds	r3, r7, #7
20000110:	781b      	ldrb	r3, [r3, #0]
20000112:	2201      	movs	r2, #1
20000114:	4013      	ands	r3, r2
20000116:	d001      	beq.n	2000011c <read_column+0x46>
        return 1;
20000118:	2301      	movs	r3, #1
2000011a:	e000      	b.n	2000011e <read_column+0x48>

    return 0;
2000011c:	2300      	movs	r3, #0
}
2000011e:	0018      	movs	r0, r3
20000120:	46bd      	mov	sp, r7
20000122:	b002      	add	sp, #8
20000124:	bd80      	pop	{r7, pc}
20000126:	46c0      	nop			@ (mov r8, r8)
20000128:	40021011 	.word	0x40021011

2000012c <kbdActivate>:

void kbdActivate(unsigned int row)
{
2000012c:	b580      	push	{r7, lr}
2000012e:	b082      	sub	sp, #8
20000130:	af00      	add	r7, sp, #0
20000132:	6078      	str	r0, [r7, #4]
    switch (row)
20000134:	687b      	ldr	r3, [r7, #4]
20000136:	2b04      	cmp	r3, #4
20000138:	d819      	bhi.n	2000016e <kbdActivate+0x42>
2000013a:	687b      	ldr	r3, [r7, #4]
2000013c:	009a      	lsls	r2, r3, #2
2000013e:	4b0e      	ldr	r3, [pc, #56]	@ (20000178 <kbdActivate+0x4c>)
20000140:	18d3      	adds	r3, r2, r3
20000142:	681b      	ldr	r3, [r3, #0]
20000144:	469f      	mov	pc, r3
    {
    case 1:
        *GPIO_E_ODRHigh = 0x10;
20000146:	4b0d      	ldr	r3, [pc, #52]	@ (2000017c <kbdActivate+0x50>)
20000148:	2210      	movs	r2, #16
2000014a:	701a      	strb	r2, [r3, #0]
        break;
2000014c:	e00f      	b.n	2000016e <kbdActivate+0x42>
    case 2:
        *GPIO_E_ODRHigh = 0x20;
2000014e:	4b0b      	ldr	r3, [pc, #44]	@ (2000017c <kbdActivate+0x50>)
20000150:	2220      	movs	r2, #32
20000152:	701a      	strb	r2, [r3, #0]
        break;
20000154:	e00b      	b.n	2000016e <kbdActivate+0x42>
    case 3:
        *GPIO_E_ODRHigh = 0x40;
20000156:	4b09      	ldr	r3, [pc, #36]	@ (2000017c <kbdActivate+0x50>)
20000158:	2240      	movs	r2, #64	@ 0x40
2000015a:	701a      	strb	r2, [r3, #0]
        break;
2000015c:	e007      	b.n	2000016e <kbdActivate+0x42>
    case 4:
        *GPIO_E_ODRHigh = 0x80;
2000015e:	4b07      	ldr	r3, [pc, #28]	@ (2000017c <kbdActivate+0x50>)
20000160:	2280      	movs	r2, #128	@ 0x80
20000162:	701a      	strb	r2, [r3, #0]
        break;
20000164:	e003      	b.n	2000016e <kbdActivate+0x42>
    case 0:
        *GPIO_E_ODRHigh = 0x00;
20000166:	4b05      	ldr	r3, [pc, #20]	@ (2000017c <kbdActivate+0x50>)
20000168:	2200      	movs	r2, #0
2000016a:	701a      	strb	r2, [r3, #0]
        break;
2000016c:	46c0      	nop			@ (mov r8, r8)
    }
}
2000016e:	46c0      	nop			@ (mov r8, r8)
20000170:	46bd      	mov	sp, r7
20000172:	b002      	add	sp, #8
20000174:	bd80      	pop	{r7, pc}
20000176:	46c0      	nop			@ (mov r8, r8)
20000178:	20001e18 	.word	0x20001e18
2000017c:	40021015 	.word	0x40021015

20000180 <kbdGetCol>:

// Läs en rad och returnera vilken kolumn som är ett
// (antar endast en tangent nedtryckt)
int kbdGetCol(void)
{
20000180:	b580      	push	{r7, lr}
20000182:	b082      	sub	sp, #8
20000184:	af00      	add	r7, sp, #0
    unsigned short c;
    c = *GPIO_E_IDrHigh;
20000186:	4b13      	ldr	r3, [pc, #76]	@ (200001d4 <kbdGetCol+0x54>)
20000188:	781b      	ldrb	r3, [r3, #0]
2000018a:	b2da      	uxtb	r2, r3
2000018c:	1dbb      	adds	r3, r7, #6
2000018e:	801a      	strh	r2, [r3, #0]
    if (c & 0x8)
20000190:	1dbb      	adds	r3, r7, #6
20000192:	881b      	ldrh	r3, [r3, #0]
20000194:	2208      	movs	r2, #8
20000196:	4013      	ands	r3, r2
20000198:	d001      	beq.n	2000019e <kbdGetCol+0x1e>
        return 4;
2000019a:	2304      	movs	r3, #4
2000019c:	e015      	b.n	200001ca <kbdGetCol+0x4a>
    if (c & 0x4)
2000019e:	1dbb      	adds	r3, r7, #6
200001a0:	881b      	ldrh	r3, [r3, #0]
200001a2:	2204      	movs	r2, #4
200001a4:	4013      	ands	r3, r2
200001a6:	d001      	beq.n	200001ac <kbdGetCol+0x2c>
        return 3;
200001a8:	2303      	movs	r3, #3
200001aa:	e00e      	b.n	200001ca <kbdGetCol+0x4a>
    if (c & 0x2)
200001ac:	1dbb      	adds	r3, r7, #6
200001ae:	881b      	ldrh	r3, [r3, #0]
200001b0:	2202      	movs	r2, #2
200001b2:	4013      	ands	r3, r2
200001b4:	d001      	beq.n	200001ba <kbdGetCol+0x3a>
        return 2;
200001b6:	2302      	movs	r3, #2
200001b8:	e007      	b.n	200001ca <kbdGetCol+0x4a>
    if (c & 0x1)
200001ba:	1dbb      	adds	r3, r7, #6
200001bc:	881b      	ldrh	r3, [r3, #0]
200001be:	2201      	movs	r2, #1
200001c0:	4013      	ands	r3, r2
200001c2:	d001      	beq.n	200001c8 <kbdGetCol+0x48>
        return 1;
200001c4:	2301      	movs	r3, #1
200001c6:	e000      	b.n	200001ca <kbdGetCol+0x4a>
    return 0;
200001c8:	2300      	movs	r3, #0
}
200001ca:	0018      	movs	r0, r3
200001cc:	46bd      	mov	sp, r7
200001ce:	b002      	add	sp, #8
200001d0:	bd80      	pop	{r7, pc}
200001d2:	46c0      	nop			@ (mov r8, r8)
200001d4:	40021011 	.word	0x40021011

200001d8 <keyb>:

unsigned char keyb()
{
200001d8:	b590      	push	{r4, r7, lr}
200001da:	b087      	sub	sp, #28
200001dc:	af00      	add	r7, sp, #0
    unsigned char key[] = {'1', '2', '3', 'A',
200001de:	003b      	movs	r3, r7
200001e0:	4a15      	ldr	r2, [pc, #84]	@ (20000238 <keyb+0x60>)
200001e2:	ca13      	ldmia	r2!, {r0, r1, r4}
200001e4:	c313      	stmia	r3!, {r0, r1, r4}
200001e6:	6812      	ldr	r2, [r2, #0]
200001e8:	601a      	str	r2, [r3, #0]
                           '4', '5', '6', 'B',
                           '7', '8', '9', 'C',
                           'E', '0', 'F', 'D'};
    for (int row = 1; row <= 4; row++)
200001ea:	2301      	movs	r3, #1
200001ec:	617b      	str	r3, [r7, #20]
200001ee:	e018      	b.n	20000222 <keyb+0x4a>
    {
        kbdActivate(row);
200001f0:	697b      	ldr	r3, [r7, #20]
200001f2:	0018      	movs	r0, r3
200001f4:	f7ff ff9a 	bl	2000012c <kbdActivate>
        delay_250ns();
200001f8:	f7ff ff30 	bl	2000005c <delay_250ns>
        int col = kbdGetCol();
200001fc:	f7ff ffc0 	bl	20000180 <kbdGetCol>
20000200:	0003      	movs	r3, r0
20000202:	613b      	str	r3, [r7, #16]
        if (col)
20000204:	693b      	ldr	r3, [r7, #16]
20000206:	2b00      	cmp	r3, #0
20000208:	d008      	beq.n	2000021c <keyb+0x44>
        {
            return key[4 * (row - 1) + (col - 1)];
2000020a:	697b      	ldr	r3, [r7, #20]
2000020c:	3b01      	subs	r3, #1
2000020e:	009a      	lsls	r2, r3, #2
20000210:	693b      	ldr	r3, [r7, #16]
20000212:	3b01      	subs	r3, #1
20000214:	18d3      	adds	r3, r2, r3
20000216:	003a      	movs	r2, r7
20000218:	5cd3      	ldrb	r3, [r2, r3]
2000021a:	e009      	b.n	20000230 <keyb+0x58>
    for (int row = 1; row <= 4; row++)
2000021c:	697b      	ldr	r3, [r7, #20]
2000021e:	3301      	adds	r3, #1
20000220:	617b      	str	r3, [r7, #20]
20000222:	697b      	ldr	r3, [r7, #20]
20000224:	2b04      	cmp	r3, #4
20000226:	dde3      	ble.n	200001f0 <keyb+0x18>
        }
    }
    *GPIO_E_ODRHigh = 0;
20000228:	4b04      	ldr	r3, [pc, #16]	@ (2000023c <keyb+0x64>)
2000022a:	2200      	movs	r2, #0
2000022c:	701a      	strb	r2, [r3, #0]
    return 0xFF;
2000022e:	23ff      	movs	r3, #255	@ 0xff
}
20000230:	0018      	movs	r0, r3
20000232:	46bd      	mov	sp, r7
20000234:	b007      	add	sp, #28
20000236:	bd90      	pop	{r4, r7, pc}
20000238:	20001e2c 	.word	0x20001e2c
2000023c:	40021015 	.word	0x40021015

20000240 <irq_handler>:


void irq_handler(void)
{
20000240:	b580      	push	{r7, lr}
20000242:	af00      	add	r7, sp, #0
    // PR EDTI3 reset the value

    *EXTI_IMR &= ~0xF;
20000244:	4b0e      	ldr	r3, [pc, #56]	@ (20000280 <irq_handler+0x40>)
20000246:	681a      	ldr	r2, [r3, #0]
20000248:	4b0d      	ldr	r3, [pc, #52]	@ (20000280 <irq_handler+0x40>)
2000024a:	210f      	movs	r1, #15
2000024c:	438a      	bics	r2, r1
2000024e:	601a      	str	r2, [r3, #0]
    currently_pressed_key = keyb();
20000250:	f7ff ffc2 	bl	200001d8 <keyb>
20000254:	0003      	movs	r3, r0
20000256:	001a      	movs	r2, r3
20000258:	4b0a      	ldr	r3, [pc, #40]	@ (20000284 <irq_handler+0x44>)
2000025a:	701a      	strb	r2, [r3, #0]

    *GPIO_E_IDrHigh = 0xF0;
2000025c:	4b0a      	ldr	r3, [pc, #40]	@ (20000288 <irq_handler+0x48>)
2000025e:	22f0      	movs	r2, #240	@ 0xf0
20000260:	701a      	strb	r2, [r3, #0]

    *EXTI_PR |= 0xF;
20000262:	4b0a      	ldr	r3, [pc, #40]	@ (2000028c <irq_handler+0x4c>)
20000264:	681a      	ldr	r2, [r3, #0]
20000266:	4b09      	ldr	r3, [pc, #36]	@ (2000028c <irq_handler+0x4c>)
20000268:	210f      	movs	r1, #15
2000026a:	430a      	orrs	r2, r1
2000026c:	601a      	str	r2, [r3, #0]
    *EXTI_IMR |= 0xF;
2000026e:	4b04      	ldr	r3, [pc, #16]	@ (20000280 <irq_handler+0x40>)
20000270:	681a      	ldr	r2, [r3, #0]
20000272:	4b03      	ldr	r3, [pc, #12]	@ (20000280 <irq_handler+0x40>)
20000274:	210f      	movs	r1, #15
20000276:	430a      	orrs	r2, r1
20000278:	601a      	str	r2, [r3, #0]

    // currently_pressed_key = keyb();
}
2000027a:	46c0      	nop			@ (mov r8, r8)
2000027c:	46bd      	mov	sp, r7
2000027e:	bd80      	pop	{r7, pc}
20000280:	40013c00 	.word	0x40013c00
20000284:	20001db8 	.word	0x20001db8
20000288:	40021011 	.word	0x40021011
2000028c:	40013c14 	.word	0x40013c14

20000290 <SysTickHandler>:
void SysTickHandler() {
20000290:	b580      	push	{r7, lr}
20000292:	af00      	add	r7, sp, #0
    *GPIO_E_ODRLow ^= (1<<0);   // Växla PE0 (flip bit 0)
20000294:	4b05      	ldr	r3, [pc, #20]	@ (200002ac <SysTickHandler+0x1c>)
20000296:	781b      	ldrb	r3, [r3, #0]
20000298:	b2db      	uxtb	r3, r3
2000029a:	4a04      	ldr	r2, [pc, #16]	@ (200002ac <SysTickHandler+0x1c>)
2000029c:	2101      	movs	r1, #1
2000029e:	404b      	eors	r3, r1
200002a0:	b2db      	uxtb	r3, r3
200002a2:	7013      	strb	r3, [r2, #0]
}
200002a4:	46c0      	nop			@ (mov r8, r8)
200002a6:	46bd      	mov	sp, r7
200002a8:	bd80      	pop	{r7, pc}
200002aa:	46c0      	nop			@ (mov r8, r8)
200002ac:	40021014 	.word	0x40021014

200002b0 <StartSquareWave>:
void StartSquareWave(unsigned int period_in_us){
200002b0:	b580      	push	{r7, lr}
200002b2:	b082      	sub	sp, #8
200002b4:	af00      	add	r7, sp, #0
200002b6:	6078      	str	r0, [r7, #4]
    *((void (**)(void))(0x2001C000 + 0x3C)) = &SysTickHandler;
200002b8:	4b0c      	ldr	r3, [pc, #48]	@ (200002ec <StartSquareWave+0x3c>)
200002ba:	4a0d      	ldr	r2, [pc, #52]	@ (200002f0 <StartSquareWave+0x40>)
200002bc:	601a      	str	r2, [r3, #0]
    *((void (**)(void))(0x2001C000 + 0x64)) = &irq_handler;
200002be:	4b0d      	ldr	r3, [pc, #52]	@ (200002f4 <StartSquareWave+0x44>)
200002c0:	4a0d      	ldr	r2, [pc, #52]	@ (200002f8 <StartSquareWave+0x48>)
200002c2:	601a      	str	r2, [r3, #0]
    *STK_CTRL = 0;            // Stäng av SysTick under konfigurering
200002c4:	4b0d      	ldr	r3, [pc, #52]	@ (200002fc <StartSquareWave+0x4c>)
200002c6:	2200      	movs	r2, #0
200002c8:	601a      	str	r2, [r3, #0]
    *STK_LOAD =  (168 * period_in_us) - 1; //1ms = 168hz
200002ca:	687b      	ldr	r3, [r7, #4]
200002cc:	22a8      	movs	r2, #168	@ 0xa8
200002ce:	435a      	muls	r2, r3
200002d0:	4b0b      	ldr	r3, [pc, #44]	@ (20000300 <StartSquareWave+0x50>)
200002d2:	3a01      	subs	r2, #1
200002d4:	601a      	str	r2, [r3, #0]
    *STK_VAL = 0;             // Nollställ räknaren
200002d6:	4b0b      	ldr	r3, [pc, #44]	@ (20000304 <StartSquareWave+0x54>)
200002d8:	2200      	movs	r2, #0
200002da:	601a      	str	r2, [r3, #0]
    *STK_CTRL = 7;            // 
200002dc:	4b07      	ldr	r3, [pc, #28]	@ (200002fc <StartSquareWave+0x4c>)
200002de:	2207      	movs	r2, #7
200002e0:	601a      	str	r2, [r3, #0]
}
200002e2:	46c0      	nop			@ (mov r8, r8)
200002e4:	46bd      	mov	sp, r7
200002e6:	b002      	add	sp, #8
200002e8:	bd80      	pop	{r7, pc}
200002ea:	46c0      	nop			@ (mov r8, r8)
200002ec:	2001c03c 	.word	0x2001c03c
200002f0:	20000291 	.word	0x20000291
200002f4:	2001c064 	.word	0x2001c064
200002f8:	20000241 	.word	0x20000241
200002fc:	e000e010 	.word	0xe000e010
20000300:	e000e014 	.word	0xe000e014
20000304:	e000e018 	.word	0xe000e018

20000308 <StopSquareWave>:

// Den här funktionen skall avbryta fyrkantsvågen.
void StopSquareWave()
{
20000308:	b580      	push	{r7, lr}
2000030a:	af00      	add	r7, sp, #0
    *STK_CTRL = 0;
2000030c:	4b02      	ldr	r3, [pc, #8]	@ (20000318 <StopSquareWave+0x10>)
2000030e:	2200      	movs	r2, #0
20000310:	601a      	str	r2, [r3, #0]
}
20000312:	46c0      	nop			@ (mov r8, r8)
20000314:	46bd      	mov	sp, r7
20000316:	bd80      	pop	{r7, pc}
20000318:	e000e010 	.word	0xe000e010

2000031c <appInit>:


void appInit()
{
2000031c:	b580      	push	{r7, lr}
2000031e:	af00      	add	r7, sp, #0
    // vecktor shit här
    // NVIC
    NVIC_ISER0 |= (1 << 23); // i change it from &=
20000320:	4b16      	ldr	r3, [pc, #88]	@ (2000037c <appInit+0x60>)
20000322:	681a      	ldr	r2, [r3, #0]
20000324:	4b15      	ldr	r3, [pc, #84]	@ (2000037c <appInit+0x60>)
20000326:	2180      	movs	r1, #128	@ 0x80
20000328:	0409      	lsls	r1, r1, #16
2000032a:	430a      	orrs	r2, r1
2000032c:	601a      	str	r2, [r3, #0]
    NVIC_ISER1 |= (1 << 8);
2000032e:	4b14      	ldr	r3, [pc, #80]	@ (20000380 <appInit+0x64>)
20000330:	681a      	ldr	r2, [r3, #0]
20000332:	4b13      	ldr	r3, [pc, #76]	@ (20000380 <appInit+0x64>)
20000334:	2180      	movs	r1, #128	@ 0x80
20000336:	0049      	lsls	r1, r1, #1
20000338:	430a      	orrs	r2, r1
2000033a:	601a      	str	r2, [r3, #0]

    SYSTCG_EXTICR3 = 0x4444; // 0100 to EXTI 8-11
2000033c:	4b11      	ldr	r3, [pc, #68]	@ (20000384 <appInit+0x68>)
2000033e:	4a12      	ldr	r2, [pc, #72]	@ (20000388 <appInit+0x6c>)
20000340:	601a      	str	r2, [r3, #0]

    *((volatile unsigned int *)0x40013C00) |= 0xF00;
20000342:	4b12      	ldr	r3, [pc, #72]	@ (2000038c <appInit+0x70>)
20000344:	681a      	ldr	r2, [r3, #0]
20000346:	4b11      	ldr	r3, [pc, #68]	@ (2000038c <appInit+0x70>)
20000348:	21f0      	movs	r1, #240	@ 0xf0
2000034a:	0109      	lsls	r1, r1, #4
2000034c:	430a      	orrs	r2, r1
2000034e:	601a      	str	r2, [r3, #0]
    *((volatile unsigned int *)0x40013C08) |= 0xF00;
20000350:	4b0f      	ldr	r3, [pc, #60]	@ (20000390 <appInit+0x74>)
20000352:	681a      	ldr	r2, [r3, #0]
20000354:	4b0e      	ldr	r3, [pc, #56]	@ (20000390 <appInit+0x74>)
20000356:	21f0      	movs	r1, #240	@ 0xf0
20000358:	0109      	lsls	r1, r1, #4
2000035a:	430a      	orrs	r2, r1
2000035c:	601a      	str	r2, [r3, #0]
    *((volatile unsigned int *)0x40013C0C) &= ~0xF00;
2000035e:	4b0d      	ldr	r3, [pc, #52]	@ (20000394 <appInit+0x78>)
20000360:	681a      	ldr	r2, [r3, #0]
20000362:	4b0c      	ldr	r3, [pc, #48]	@ (20000394 <appInit+0x78>)
20000364:	490c      	ldr	r1, [pc, #48]	@ (20000398 <appInit+0x7c>)
20000366:	400a      	ands	r2, r1
20000368:	601a      	str	r2, [r3, #0]
    // *((unsigned int *)0x40013C0C) |= 0xF00;
    
   

    // avbrottvekotr
    *((void (**)(void))0x2001C09C) = irq_handler;
2000036a:	4b0c      	ldr	r3, [pc, #48]	@ (2000039c <appInit+0x80>)
2000036c:	4a0c      	ldr	r2, [pc, #48]	@ (200003a0 <appInit+0x84>)
2000036e:	601a      	str	r2, [r3, #0]
    *((void (**)(void))0x2001C0E0) = irq_handler;
20000370:	4b0c      	ldr	r3, [pc, #48]	@ (200003a4 <appInit+0x88>)
20000372:	4a0b      	ldr	r2, [pc, #44]	@ (200003a0 <appInit+0x84>)
20000374:	601a      	str	r2, [r3, #0]

    
}
20000376:	46c0      	nop			@ (mov r8, r8)
20000378:	46bd      	mov	sp, r7
2000037a:	bd80      	pop	{r7, pc}
2000037c:	e000e100 	.word	0xe000e100
20000380:	e000e104 	.word	0xe000e104
20000384:	40013810 	.word	0x40013810
20000388:	00004444 	.word	0x00004444
2000038c:	40013c00 	.word	0x40013c00
20000390:	40013c08 	.word	0x40013c08
20000394:	40013c0c 	.word	0x40013c0c
20000398:	fffff0ff 	.word	0xfffff0ff
2000039c:	2001c09c 	.word	0x2001c09c
200003a0:	20000241 	.word	0x20000241
200003a4:	2001c0e0 	.word	0x2001c0e0

200003a8 <InitKeyboard>:

void InitKeyboard()
{
200003a8:	b580      	push	{r7, lr}
200003aa:	af00      	add	r7, sp, #0
    // från labb 2 här

    // b15-b12 used for output to rows
    // b11-b8  used for input from columns
    *GPIO_E_MODER = 0x55005555;
200003ac:	4b0b      	ldr	r3, [pc, #44]	@ (200003dc <InitKeyboard+0x34>)
200003ae:	4a0c      	ldr	r2, [pc, #48]	@ (200003e0 <InitKeyboard+0x38>)
200003b0:	601a      	str	r2, [r3, #0]
    // Pinnarna som läses från tangentbordet är spänningssatta om
    // nedtryckta och flytande annars, så behöver Pull Down
    *GPIO_E_Pupdr = 0x00AA0000;
200003b2:	4b0c      	ldr	r3, [pc, #48]	@ (200003e4 <InitKeyboard+0x3c>)
200003b4:	22aa      	movs	r2, #170	@ 0xaa
200003b6:	0412      	lsls	r2, r2, #16
200003b8:	601a      	str	r2, [r3, #0]
    // Pinnarna som väljer rad skall vara spänningssatta (Push/Pull)
    *GPIO_E_Otyper = 0x00000000;
200003ba:	4b0b      	ldr	r3, [pc, #44]	@ (200003e8 <InitKeyboard+0x40>)
200003bc:	2200      	movs	r2, #0
200003be:	801a      	strh	r2, [r3, #0]

    *GPIO_E_Ospeedr = 0xAAAAAAAA;
200003c0:	4b0a      	ldr	r3, [pc, #40]	@ (200003ec <InitKeyboard+0x44>)
200003c2:	4a0b      	ldr	r2, [pc, #44]	@ (200003f0 <InitKeyboard+0x48>)
200003c4:	601a      	str	r2, [r3, #0]
    *GPIO_E_ODRLow = 0;
200003c6:	4b0b      	ldr	r3, [pc, #44]	@ (200003f4 <InitKeyboard+0x4c>)
200003c8:	2200      	movs	r2, #0
200003ca:	701a      	strb	r2, [r3, #0]
    *GPIO_E_ODRHigh = 0xF0;
200003cc:	4b0a      	ldr	r3, [pc, #40]	@ (200003f8 <InitKeyboard+0x50>)
200003ce:	22f0      	movs	r2, #240	@ 0xf0
200003d0:	701a      	strb	r2, [r3, #0]
    // int c;
    // 		do {
    // 			c = keyb();
    // 		} while(c == 0xFF);

    appInit();
200003d2:	f7ff ffa3 	bl	2000031c <appInit>
}
200003d6:	46c0      	nop			@ (mov r8, r8)
200003d8:	46bd      	mov	sp, r7
200003da:	bd80      	pop	{r7, pc}
200003dc:	40021000 	.word	0x40021000
200003e0:	55005555 	.word	0x55005555
200003e4:	4002100c 	.word	0x4002100c
200003e8:	40021004 	.word	0x40021004
200003ec:	40021008 	.word	0x40021008
200003f0:	aaaaaaaa 	.word	0xaaaaaaaa
200003f4:	40021014 	.word	0x40021014
200003f8:	40021015 	.word	0x40021015

200003fc <main>:

void main()
{
200003fc:	b580      	push	{r7, lr}
200003fe:	b084      	sub	sp, #16
20000400:	af00      	add	r7, sp, #0
    InitSquareWave();
20000402:	f7ff fe0f 	bl	20000024 <InitSquareWave>
    InitKeyboard();
20000406:	f7ff ffcf 	bl	200003a8 <InitKeyboard>
    StartSquareWave(PERIOD);
2000040a:	2064      	movs	r0, #100	@ 0x64
2000040c:	f7ff ff50 	bl	200002b0 <StartSquareWave>
    printf("key pressed: %c\n", currently_pressed_key);
20000410:	4b15      	ldr	r3, [pc, #84]	@ (20000468 <main+0x6c>)
20000412:	781b      	ldrb	r3, [r3, #0]
20000414:	b2db      	uxtb	r3, r3
20000416:	001a      	movs	r2, r3
20000418:	4b14      	ldr	r3, [pc, #80]	@ (2000046c <main+0x70>)
2000041a:	0011      	movs	r1, r2
2000041c:	0018      	movs	r0, r3
2000041e:	f000 fcfd 	bl	20000e1c <iprintf>
    while (currently_pressed_key != 1)
20000422:	e001      	b.n	20000428 <main+0x2c>
    { /* Gör ingenting förrän man trycker på knapp '1'*/
        int x = 1;
20000424:	2301      	movs	r3, #1
20000426:	607b      	str	r3, [r7, #4]
    while (currently_pressed_key != 1)
20000428:	4b0f      	ldr	r3, [pc, #60]	@ (20000468 <main+0x6c>)
2000042a:	781b      	ldrb	r3, [r3, #0]
2000042c:	b2db      	uxtb	r3, r3
2000042e:	2b01      	cmp	r3, #1
20000430:	d1f8      	bne.n	20000424 <main+0x28>
    }
    StopSquareWave();
20000432:	f7ff ff69 	bl	20000308 <StopSquareWave>
    while (currently_pressed_key != 5)
20000436:	e001      	b.n	2000043c <main+0x40>
    { /* Gör ingenting förrän man trycker på knapp '5'*/
        int x = 2;
20000438:	2302      	movs	r3, #2
2000043a:	60bb      	str	r3, [r7, #8]
    while (currently_pressed_key != 5)
2000043c:	4b0a      	ldr	r3, [pc, #40]	@ (20000468 <main+0x6c>)
2000043e:	781b      	ldrb	r3, [r3, #0]
20000440:	b2db      	uxtb	r3, r3
20000442:	2b05      	cmp	r3, #5
20000444:	d1f8      	bne.n	20000438 <main+0x3c>
    }
    StartSquareWave(PERIOD * 2);
20000446:	20c8      	movs	r0, #200	@ 0xc8
20000448:	f7ff ff32 	bl	200002b0 <StartSquareWave>
    while (currently_pressed_key != 9)
2000044c:	e001      	b.n	20000452 <main+0x56>
    { /* Gör ingenting förrän man trycker på knapp '9'*/
        int x = 3;
2000044e:	2303      	movs	r3, #3
20000450:	60fb      	str	r3, [r7, #12]
    while (currently_pressed_key != 9)
20000452:	4b05      	ldr	r3, [pc, #20]	@ (20000468 <main+0x6c>)
20000454:	781b      	ldrb	r3, [r3, #0]
20000456:	b2db      	uxtb	r3, r3
20000458:	2b09      	cmp	r3, #9
2000045a:	d1f8      	bne.n	2000044e <main+0x52>
    }
    StopSquareWave();
2000045c:	f7ff ff54 	bl	20000308 <StopSquareWave>
20000460:	46c0      	nop			@ (mov r8, r8)
20000462:	46bd      	mov	sp, r7
20000464:	b004      	add	sp, #16
20000466:	bd80      	pop	{r7, pc}
20000468:	20001db8 	.word	0x20001db8
2000046c:	20001e3c 	.word	0x20001e3c

20000470 <_sbrk>:
20000470:	4a0b      	ldr	r2, [pc, #44]	@ (200004a0 <_sbrk+0x30>)
20000472:	b508      	push	{r3, lr}
20000474:	4603      	mov	r3, r0
20000476:	6810      	ldr	r0, [r2, #0]
20000478:	b128      	cbz	r0, 20000486 <_sbrk+0x16>
2000047a:	490a      	ldr	r1, [pc, #40]	@ (200004a4 <_sbrk+0x34>)
2000047c:	4403      	add	r3, r0
2000047e:	428b      	cmp	r3, r1
20000480:	d807      	bhi.n	20000492 <_sbrk+0x22>
20000482:	6013      	str	r3, [r2, #0]
20000484:	bd08      	pop	{r3, pc}
20000486:	4808      	ldr	r0, [pc, #32]	@ (200004a8 <_sbrk+0x38>)
20000488:	4906      	ldr	r1, [pc, #24]	@ (200004a4 <_sbrk+0x34>)
2000048a:	6010      	str	r0, [r2, #0]
2000048c:	4403      	add	r3, r0
2000048e:	428b      	cmp	r3, r1
20000490:	d9f7      	bls.n	20000482 <_sbrk+0x12>
20000492:	f000 fced 	bl	20000e70 <__errno>
20000496:	230c      	movs	r3, #12
20000498:	6003      	str	r3, [r0, #0]
2000049a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2000049e:	bd08      	pop	{r3, pc}
200004a0:	20001e80 	.word	0x20001e80
200004a4:	20002400 	.word	0x20002400
200004a8:	20002000 	.word	0x20002000

200004ac <_crt_init>:
200004ac:	4b13      	ldr	r3, [pc, #76]	@ (200004fc <_crt_init+0x50>)
200004ae:	4a14      	ldr	r2, [pc, #80]	@ (20000500 <_crt_init+0x54>)
200004b0:	b510      	push	{r4, lr}
200004b2:	4c14      	ldr	r4, [pc, #80]	@ (20000504 <_crt_init+0x58>)
200004b4:	2100      	movs	r1, #0
200004b6:	4293      	cmp	r3, r2
200004b8:	6021      	str	r1, [r4, #0]
200004ba:	4604      	mov	r4, r0
200004bc:	d203      	bcs.n	200004c6 <_crt_init+0x1a>
200004be:	1ad2      	subs	r2, r2, r3
200004c0:	4618      	mov	r0, r3
200004c2:	f000 fcbd 	bl	20000e40 <memset>
200004c6:	4620      	mov	r0, r4
200004c8:	4c0f      	ldr	r4, [pc, #60]	@ (20000508 <_crt_init+0x5c>)
200004ca:	f000 f889 	bl	200005e0 <runtime_usart_init>
200004ce:	6821      	ldr	r1, [r4, #0]
200004d0:	2300      	movs	r3, #0
200004d2:	6848      	ldr	r0, [r1, #4]
200004d4:	2202      	movs	r2, #2
200004d6:	4619      	mov	r1, r3
200004d8:	f000 fa36 	bl	20000948 <setvbuf>
200004dc:	6820      	ldr	r0, [r4, #0]
200004de:	2300      	movs	r3, #0
200004e0:	4619      	mov	r1, r3
200004e2:	2202      	movs	r2, #2
200004e4:	6880      	ldr	r0, [r0, #8]
200004e6:	f000 fa2f 	bl	20000948 <setvbuf>
200004ea:	6820      	ldr	r0, [r4, #0]
200004ec:	2300      	movs	r3, #0
200004ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
200004f2:	68c0      	ldr	r0, [r0, #12]
200004f4:	2202      	movs	r2, #2
200004f6:	4619      	mov	r1, r3
200004f8:	f000 ba26 	b.w	20000948 <setvbuf>
200004fc:	20001e80 	.word	0x20001e80
20000500:	20001fd4 	.word	0x20001fd4
20000504:	20001e80 	.word	0x20001e80
20000508:	20001dc8 	.word	0x20001dc8

2000050c <_crt_deinit>:
2000050c:	f000 b872 	b.w	200005f4 <runtime_usart_deinit>

20000510 <_write>:
20000510:	1e43      	subs	r3, r0, #1
20000512:	2b01      	cmp	r3, #1
20000514:	4608      	mov	r0, r1
20000516:	d901      	bls.n	2000051c <_write+0xc>
20000518:	2000      	movs	r0, #0
2000051a:	4770      	bx	lr
2000051c:	4611      	mov	r1, r2
2000051e:	f000 b899 	b.w	20000654 <runtime_usart_write>
20000522:	bf00      	nop

20000524 <_read>:
20000524:	460b      	mov	r3, r1
20000526:	b108      	cbz	r0, 2000052c <_read+0x8>
20000528:	2000      	movs	r0, #0
2000052a:	4770      	bx	lr
2000052c:	4611      	mov	r1, r2
2000052e:	4618      	mov	r0, r3
20000530:	f000 b86e 	b.w	20000610 <runtime_usart_read>

20000534 <_close>:
20000534:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
20000538:	4770      	bx	lr
2000053a:	bf00      	nop

2000053c <_open>:
2000053c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
20000540:	4770      	bx	lr
20000542:	bf00      	nop

20000544 <_fstat>:
20000544:	2000      	movs	r0, #0
20000546:	4770      	bx	lr

20000548 <_lseek>:
20000548:	2000      	movs	r0, #0
2000054a:	4770      	bx	lr

2000054c <_isatty>:
2000054c:	3801      	subs	r0, #1
2000054e:	2801      	cmp	r0, #1
20000550:	d901      	bls.n	20000556 <_isatty+0xa>
20000552:	2000      	movs	r0, #0
20000554:	4770      	bx	lr
20000556:	f000 b895 	b.w	20000684 <runtime_usart_isatty>
2000055a:	bf00      	nop

2000055c <md407_runtime_uartinit>:
2000055c:	4b18      	ldr	r3, [pc, #96]	@ (200005c0 <md407_runtime_uartinit+0x64>)
2000055e:	4a19      	ldr	r2, [pc, #100]	@ (200005c4 <md407_runtime_uartinit+0x68>)
20000560:	6c59      	ldr	r1, [r3, #68]	@ 0x44
20000562:	4819      	ldr	r0, [pc, #100]	@ (200005c8 <md407_runtime_uartinit+0x6c>)
20000564:	f041 0110 	orr.w	r1, r1, #16
20000568:	b410      	push	{r4}
2000056a:	6459      	str	r1, [r3, #68]	@ 0x44
2000056c:	6b19      	ldr	r1, [r3, #48]	@ 0x30
2000056e:	f041 0101 	orr.w	r1, r1, #1
20000572:	6319      	str	r1, [r3, #48]	@ 0x30
20000574:	6a59      	ldr	r1, [r3, #36]	@ 0x24
20000576:	f041 0110 	orr.w	r1, r1, #16
2000057a:	6259      	str	r1, [r3, #36]	@ 0x24
2000057c:	6a59      	ldr	r1, [r3, #36]	@ 0x24
2000057e:	f021 0110 	bic.w	r1, r1, #16
20000582:	6259      	str	r1, [r3, #36]	@ 0x24
20000584:	6919      	ldr	r1, [r3, #16]
20000586:	f041 0101 	orr.w	r1, r1, #1
2000058a:	6119      	str	r1, [r3, #16]
2000058c:	6919      	ldr	r1, [r3, #16]
2000058e:	f021 0101 	bic.w	r1, r1, #1
20000592:	6119      	str	r1, [r3, #16]
20000594:	6a53      	ldr	r3, [r2, #36]	@ 0x24
20000596:	f443 63ee 	orr.w	r3, r3, #1904	@ 0x770
2000059a:	6253      	str	r3, [r2, #36]	@ 0x24
2000059c:	6813      	ldr	r3, [r2, #0]
2000059e:	f443 1320 	orr.w	r3, r3, #2621440	@ 0x280000
200005a2:	6013      	str	r3, [r2, #0]
200005a4:	68d3      	ldr	r3, [r2, #12]
200005a6:	f240 24d9 	movw	r4, #729	@ 0x2d9
200005aa:	f242 010c 	movw	r1, #8204	@ 0x200c
200005ae:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
200005b2:	60d3      	str	r3, [r2, #12]
200005b4:	6084      	str	r4, [r0, #8]
200005b6:	f85d 4b04 	ldr.w	r4, [sp], #4
200005ba:	60c1      	str	r1, [r0, #12]
200005bc:	4770      	bx	lr
200005be:	bf00      	nop
200005c0:	40023800 	.word	0x40023800
200005c4:	40020000 	.word	0x40020000
200005c8:	40011000 	.word	0x40011000

200005cc <runtime_tstchar>:
200005cc:	4b03      	ldr	r3, [pc, #12]	@ (200005dc <runtime_tstchar+0x10>)
200005ce:	6818      	ldr	r0, [r3, #0]
200005d0:	f010 0020 	ands.w	r0, r0, #32
200005d4:	bf1c      	itt	ne
200005d6:	6858      	ldrne	r0, [r3, #4]
200005d8:	b2c0      	uxtbne	r0, r0
200005da:	4770      	bx	lr
200005dc:	40011000 	.word	0x40011000

200005e0 <runtime_usart_init>:
200005e0:	4b03      	ldr	r3, [pc, #12]	@ (200005f0 <runtime_usart_init+0x10>)
200005e2:	2000      	movs	r0, #0
200005e4:	f240 22d9 	movw	r2, #729	@ 0x2d9
200005e8:	609a      	str	r2, [r3, #8]
200005ea:	6158      	str	r0, [r3, #20]
200005ec:	6118      	str	r0, [r3, #16]
200005ee:	4770      	bx	lr
200005f0:	40011000 	.word	0x40011000

200005f4 <runtime_usart_deinit>:
200005f4:	b508      	push	{r3, lr}
200005f6:	4b04      	ldr	r3, [pc, #16]	@ (20000608 <runtime_usart_deinit+0x14>)
200005f8:	681b      	ldr	r3, [r3, #0]
200005fa:	6898      	ldr	r0, [r3, #8]
200005fc:	f000 f990 	bl	20000920 <fflush>
20000600:	4b02      	ldr	r3, [pc, #8]	@ (2000060c <runtime_usart_deinit+0x18>)
20000602:	2200      	movs	r2, #0
20000604:	60da      	str	r2, [r3, #12]
20000606:	bd08      	pop	{r3, pc}
20000608:	20001dc8 	.word	0x20001dc8
2000060c:	40011000 	.word	0x40011000

20000610 <runtime_usart_read>:
20000610:	4a09      	ldr	r2, [pc, #36]	@ (20000638 <runtime_usart_read+0x28>)
20000612:	b500      	push	{lr}
20000614:	4686      	mov	lr, r0
20000616:	2000      	movs	r0, #0
20000618:	6813      	ldr	r3, [r2, #0]
2000061a:	069b      	lsls	r3, r3, #26
2000061c:	d508      	bpl.n	20000630 <runtime_usart_read+0x20>
2000061e:	6853      	ldr	r3, [r2, #4]
20000620:	f013 03ff 	ands.w	r3, r3, #255	@ 0xff
20000624:	46f4      	mov	ip, lr
20000626:	d003      	beq.n	20000630 <runtime_usart_read+0x20>
20000628:	f80c 3b01 	strb.w	r3, [ip], #1
2000062c:	3001      	adds	r0, #1
2000062e:	46e6      	mov	lr, ip
20000630:	4288      	cmp	r0, r1
20000632:	d1f1      	bne.n	20000618 <runtime_usart_read+0x8>
20000634:	f85d fb04 	ldr.w	pc, [sp], #4
20000638:	40011000 	.word	0x40011000

2000063c <runtime_outchar>:
2000063c:	4a04      	ldr	r2, [pc, #16]	@ (20000650 <runtime_outchar+0x14>)
2000063e:	6813      	ldr	r3, [r2, #0]
20000640:	061b      	lsls	r3, r3, #24
20000642:	d5fc      	bpl.n	2000063e <runtime_outchar+0x2>
20000644:	280a      	cmp	r0, #10
20000646:	6050      	str	r0, [r2, #4]
20000648:	d101      	bne.n	2000064e <runtime_outchar+0x12>
2000064a:	200d      	movs	r0, #13
2000064c:	e7f7      	b.n	2000063e <runtime_outchar+0x2>
2000064e:	4770      	bx	lr
20000650:	40011000 	.word	0x40011000

20000654 <runtime_usart_write>:
20000654:	4684      	mov	ip, r0
20000656:	4608      	mov	r0, r1
20000658:	b189      	cbz	r1, 2000067e <runtime_usart_write+0x2a>
2000065a:	4a09      	ldr	r2, [pc, #36]	@ (20000680 <runtime_usart_write+0x2c>)
2000065c:	b500      	push	{lr}
2000065e:	eb0c 0e01 	add.w	lr, ip, r1
20000662:	f81c 1b01 	ldrb.w	r1, [ip], #1
20000666:	6813      	ldr	r3, [r2, #0]
20000668:	061b      	lsls	r3, r3, #24
2000066a:	d5fc      	bpl.n	20000666 <runtime_usart_write+0x12>
2000066c:	290a      	cmp	r1, #10
2000066e:	6051      	str	r1, [r2, #4]
20000670:	d101      	bne.n	20000676 <runtime_usart_write+0x22>
20000672:	210d      	movs	r1, #13
20000674:	e7f7      	b.n	20000666 <runtime_usart_write+0x12>
20000676:	45e6      	cmp	lr, ip
20000678:	d1f3      	bne.n	20000662 <runtime_usart_write+0xe>
2000067a:	f85d fb04 	ldr.w	pc, [sp], #4
2000067e:	4770      	bx	lr
20000680:	40011000 	.word	0x40011000

20000684 <runtime_usart_isatty>:
20000684:	2001      	movs	r0, #1
20000686:	4770      	bx	lr

20000688 <md407_runtime_portinit>:
20000688:	4b16      	ldr	r3, [pc, #88]	@ (200006e4 <md407_runtime_portinit+0x5c>)
2000068a:	4817      	ldr	r0, [pc, #92]	@ (200006e8 <md407_runtime_portinit+0x60>)
2000068c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
2000068e:	4917      	ldr	r1, [pc, #92]	@ (200006ec <md407_runtime_portinit+0x64>)
20000690:	f042 0218 	orr.w	r2, r2, #24
20000694:	b410      	push	{r4}
20000696:	631a      	str	r2, [r3, #48]	@ 0x30
20000698:	6c5c      	ldr	r4, [r3, #68]	@ 0x44
2000069a:	f444 4480 	orr.w	r4, r4, #16384	@ 0x4000
2000069e:	645c      	str	r4, [r3, #68]	@ 0x44
200006a0:	691c      	ldr	r4, [r3, #16]
200006a2:	f044 0418 	orr.w	r4, r4, #24
200006a6:	611c      	str	r4, [r3, #16]
200006a8:	691c      	ldr	r4, [r3, #16]
200006aa:	f024 0418 	bic.w	r4, r4, #24
200006ae:	611c      	str	r4, [r3, #16]
200006b0:	695c      	ldr	r4, [r3, #20]
200006b2:	f444 4480 	orr.w	r4, r4, #16384	@ 0x4000
200006b6:	615c      	str	r4, [r3, #20]
200006b8:	695c      	ldr	r4, [r3, #20]
200006ba:	f424 4480 	bic.w	r4, r4, #16384	@ 0x4000
200006be:	615c      	str	r4, [r3, #20]
200006c0:	2200      	movs	r2, #0
200006c2:	f04f 33aa 	mov.w	r3, #2863311530	@ 0xaaaaaaaa
200006c6:	6002      	str	r2, [r0, #0]
200006c8:	f85d 4b04 	ldr.w	r4, [sp], #4
200006cc:	60c3      	str	r3, [r0, #12]
200006ce:	6042      	str	r2, [r0, #4]
200006d0:	6082      	str	r2, [r0, #8]
200006d2:	6102      	str	r2, [r0, #16]
200006d4:	6142      	str	r2, [r0, #20]
200006d6:	600a      	str	r2, [r1, #0]
200006d8:	60cb      	str	r3, [r1, #12]
200006da:	604a      	str	r2, [r1, #4]
200006dc:	608a      	str	r2, [r1, #8]
200006de:	610a      	str	r2, [r1, #16]
200006e0:	614a      	str	r2, [r1, #20]
200006e2:	4770      	bx	lr
200006e4:	40023800 	.word	0x40023800
200006e8:	40021000 	.word	0x40021000
200006ec:	40020c00 	.word	0x40020c00

200006f0 <md407_runtime_clockinit>:
200006f0:	4a33      	ldr	r2, [pc, #204]	@ (200007c0 <md407_runtime_clockinit+0xd0>)
200006f2:	4834      	ldr	r0, [pc, #208]	@ (200007c4 <md407_runtime_clockinit+0xd4>)
200006f4:	6813      	ldr	r3, [r2, #0]
200006f6:	2100      	movs	r1, #0
200006f8:	f043 0301 	orr.w	r3, r3, #1
200006fc:	b082      	sub	sp, #8
200006fe:	6013      	str	r3, [r2, #0]
20000700:	6091      	str	r1, [r2, #8]
20000702:	6813      	ldr	r3, [r2, #0]
20000704:	f023 7384 	bic.w	r3, r3, #17301504	@ 0x1080000
20000708:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
2000070c:	6013      	str	r3, [r2, #0]
2000070e:	6050      	str	r0, [r2, #4]
20000710:	6813      	ldr	r3, [r2, #0]
20000712:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
20000716:	6013      	str	r3, [r2, #0]
20000718:	60d1      	str	r1, [r2, #12]
2000071a:	9100      	str	r1, [sp, #0]
2000071c:	9101      	str	r1, [sp, #4]
2000071e:	6813      	ldr	r3, [r2, #0]
20000720:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
20000724:	6013      	str	r3, [r2, #0]
20000726:	e003      	b.n	20000730 <md407_runtime_clockinit+0x40>
20000728:	9b00      	ldr	r3, [sp, #0]
2000072a:	f5b3 4fa0 	cmp.w	r3, #20480	@ 0x5000
2000072e:	d009      	beq.n	20000744 <md407_runtime_clockinit+0x54>
20000730:	6813      	ldr	r3, [r2, #0]
20000732:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
20000736:	9301      	str	r3, [sp, #4]
20000738:	9b00      	ldr	r3, [sp, #0]
2000073a:	3301      	adds	r3, #1
2000073c:	9300      	str	r3, [sp, #0]
2000073e:	9b01      	ldr	r3, [sp, #4]
20000740:	2b00      	cmp	r3, #0
20000742:	d0f1      	beq.n	20000728 <md407_runtime_clockinit+0x38>
20000744:	4b1e      	ldr	r3, [pc, #120]	@ (200007c0 <md407_runtime_clockinit+0xd0>)
20000746:	681b      	ldr	r3, [r3, #0]
20000748:	f413 3300 	ands.w	r3, r3, #131072	@ 0x20000
2000074c:	bf18      	it	ne
2000074e:	2301      	movne	r3, #1
20000750:	9301      	str	r3, [sp, #4]
20000752:	9b01      	ldr	r3, [sp, #4]
20000754:	2b01      	cmp	r3, #1
20000756:	d001      	beq.n	2000075c <md407_runtime_clockinit+0x6c>
20000758:	b002      	add	sp, #8
2000075a:	4770      	bx	lr
2000075c:	4b18      	ldr	r3, [pc, #96]	@ (200007c0 <md407_runtime_clockinit+0xd0>)
2000075e:	491a      	ldr	r1, [pc, #104]	@ (200007c8 <md407_runtime_clockinit+0xd8>)
20000760:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
20000762:	481a      	ldr	r0, [pc, #104]	@ (200007cc <md407_runtime_clockinit+0xdc>)
20000764:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
20000768:	641a      	str	r2, [r3, #64]	@ 0x40
2000076a:	680a      	ldr	r2, [r1, #0]
2000076c:	f442 4240 	orr.w	r2, r2, #49152	@ 0xc000
20000770:	600a      	str	r2, [r1, #0]
20000772:	689a      	ldr	r2, [r3, #8]
20000774:	609a      	str	r2, [r3, #8]
20000776:	689a      	ldr	r2, [r3, #8]
20000778:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
2000077c:	609a      	str	r2, [r3, #8]
2000077e:	689a      	ldr	r2, [r3, #8]
20000780:	f442 52a0 	orr.w	r2, r2, #5120	@ 0x1400
20000784:	609a      	str	r2, [r3, #8]
20000786:	6058      	str	r0, [r3, #4]
20000788:	681a      	ldr	r2, [r3, #0]
2000078a:	f042 7280 	orr.w	r2, r2, #16777216	@ 0x1000000
2000078e:	601a      	str	r2, [r3, #0]
20000790:	681a      	ldr	r2, [r3, #0]
20000792:	0192      	lsls	r2, r2, #6
20000794:	d5fc      	bpl.n	20000790 <md407_runtime_clockinit+0xa0>
20000796:	4a0e      	ldr	r2, [pc, #56]	@ (200007d0 <md407_runtime_clockinit+0xe0>)
20000798:	f240 6105 	movw	r1, #1541	@ 0x605
2000079c:	6011      	str	r1, [r2, #0]
2000079e:	6899      	ldr	r1, [r3, #8]
200007a0:	f021 0103 	bic.w	r1, r1, #3
200007a4:	6099      	str	r1, [r3, #8]
200007a6:	6899      	ldr	r1, [r3, #8]
200007a8:	f041 0102 	orr.w	r1, r1, #2
200007ac:	f5a2 6280 	sub.w	r2, r2, #1024	@ 0x400
200007b0:	6099      	str	r1, [r3, #8]
200007b2:	6893      	ldr	r3, [r2, #8]
200007b4:	f003 030c 	and.w	r3, r3, #12
200007b8:	2b08      	cmp	r3, #8
200007ba:	d1fa      	bne.n	200007b2 <md407_runtime_clockinit+0xc2>
200007bc:	b002      	add	sp, #8
200007be:	4770      	bx	lr
200007c0:	40023800 	.word	0x40023800
200007c4:	24003010 	.word	0x24003010
200007c8:	40007000 	.word	0x40007000
200007cc:	08405408 	.word	0x08405408
200007d0:	40023c00 	.word	0x40023c00

200007d4 <__sflush_r>:
200007d4:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
200007d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
200007da:	0716      	lsls	r6, r2, #28
200007dc:	4605      	mov	r5, r0
200007de:	460c      	mov	r4, r1
200007e0:	d451      	bmi.n	20000886 <__sflush_r+0xb2>
200007e2:	684b      	ldr	r3, [r1, #4]
200007e4:	2b00      	cmp	r3, #0
200007e6:	dc02      	bgt.n	200007ee <__sflush_r+0x1a>
200007e8:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
200007ea:	2b00      	cmp	r3, #0
200007ec:	dd49      	ble.n	20000882 <__sflush_r+0xae>
200007ee:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
200007f0:	2e00      	cmp	r6, #0
200007f2:	d046      	beq.n	20000882 <__sflush_r+0xae>
200007f4:	2300      	movs	r3, #0
200007f6:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
200007fa:	682f      	ldr	r7, [r5, #0]
200007fc:	602b      	str	r3, [r5, #0]
200007fe:	d031      	beq.n	20000864 <__sflush_r+0x90>
20000800:	6d62      	ldr	r2, [r4, #84]	@ 0x54
20000802:	89a3      	ldrh	r3, [r4, #12]
20000804:	0759      	lsls	r1, r3, #29
20000806:	d505      	bpl.n	20000814 <__sflush_r+0x40>
20000808:	6863      	ldr	r3, [r4, #4]
2000080a:	1ad2      	subs	r2, r2, r3
2000080c:	6b63      	ldr	r3, [r4, #52]	@ 0x34
2000080e:	b10b      	cbz	r3, 20000814 <__sflush_r+0x40>
20000810:	6c23      	ldr	r3, [r4, #64]	@ 0x40
20000812:	1ad2      	subs	r2, r2, r3
20000814:	2300      	movs	r3, #0
20000816:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
20000818:	6a21      	ldr	r1, [r4, #32]
2000081a:	4628      	mov	r0, r5
2000081c:	47b0      	blx	r6
2000081e:	1c42      	adds	r2, r0, #1
20000820:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
20000824:	d106      	bne.n	20000834 <__sflush_r+0x60>
20000826:	6829      	ldr	r1, [r5, #0]
20000828:	291d      	cmp	r1, #29
2000082a:	d845      	bhi.n	200008b8 <__sflush_r+0xe4>
2000082c:	4a27      	ldr	r2, [pc, #156]	@ (200008cc <__sflush_r+0xf8>)
2000082e:	40ca      	lsrs	r2, r1
20000830:	07d6      	lsls	r6, r2, #31
20000832:	d541      	bpl.n	200008b8 <__sflush_r+0xe4>
20000834:	2200      	movs	r2, #0
20000836:	6062      	str	r2, [r4, #4]
20000838:	04d9      	lsls	r1, r3, #19
2000083a:	6922      	ldr	r2, [r4, #16]
2000083c:	6022      	str	r2, [r4, #0]
2000083e:	d504      	bpl.n	2000084a <__sflush_r+0x76>
20000840:	1c42      	adds	r2, r0, #1
20000842:	d101      	bne.n	20000848 <__sflush_r+0x74>
20000844:	682b      	ldr	r3, [r5, #0]
20000846:	b903      	cbnz	r3, 2000084a <__sflush_r+0x76>
20000848:	6560      	str	r0, [r4, #84]	@ 0x54
2000084a:	6b61      	ldr	r1, [r4, #52]	@ 0x34
2000084c:	602f      	str	r7, [r5, #0]
2000084e:	b1c1      	cbz	r1, 20000882 <__sflush_r+0xae>
20000850:	f104 0344 	add.w	r3, r4, #68	@ 0x44
20000854:	4299      	cmp	r1, r3
20000856:	d002      	beq.n	2000085e <__sflush_r+0x8a>
20000858:	4628      	mov	r0, r5
2000085a:	f000 fb8b 	bl	20000f74 <_free_r>
2000085e:	2300      	movs	r3, #0
20000860:	6363      	str	r3, [r4, #52]	@ 0x34
20000862:	e00e      	b.n	20000882 <__sflush_r+0xae>
20000864:	6a21      	ldr	r1, [r4, #32]
20000866:	2301      	movs	r3, #1
20000868:	4628      	mov	r0, r5
2000086a:	47b0      	blx	r6
2000086c:	4602      	mov	r2, r0
2000086e:	1c50      	adds	r0, r2, #1
20000870:	d1c7      	bne.n	20000802 <__sflush_r+0x2e>
20000872:	682b      	ldr	r3, [r5, #0]
20000874:	2b00      	cmp	r3, #0
20000876:	d0c4      	beq.n	20000802 <__sflush_r+0x2e>
20000878:	2b1d      	cmp	r3, #29
2000087a:	d001      	beq.n	20000880 <__sflush_r+0xac>
2000087c:	2b16      	cmp	r3, #22
2000087e:	d119      	bne.n	200008b4 <__sflush_r+0xe0>
20000880:	602f      	str	r7, [r5, #0]
20000882:	2000      	movs	r0, #0
20000884:	e01d      	b.n	200008c2 <__sflush_r+0xee>
20000886:	690f      	ldr	r7, [r1, #16]
20000888:	2f00      	cmp	r7, #0
2000088a:	d0fa      	beq.n	20000882 <__sflush_r+0xae>
2000088c:	0793      	lsls	r3, r2, #30
2000088e:	680e      	ldr	r6, [r1, #0]
20000890:	bf08      	it	eq
20000892:	694b      	ldreq	r3, [r1, #20]
20000894:	600f      	str	r7, [r1, #0]
20000896:	bf18      	it	ne
20000898:	2300      	movne	r3, #0
2000089a:	1bf6      	subs	r6, r6, r7
2000089c:	608b      	str	r3, [r1, #8]
2000089e:	2e00      	cmp	r6, #0
200008a0:	ddef      	ble.n	20000882 <__sflush_r+0xae>
200008a2:	6a21      	ldr	r1, [r4, #32]
200008a4:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
200008a8:	4633      	mov	r3, r6
200008aa:	463a      	mov	r2, r7
200008ac:	4628      	mov	r0, r5
200008ae:	47e0      	blx	ip
200008b0:	2800      	cmp	r0, #0
200008b2:	dc07      	bgt.n	200008c4 <__sflush_r+0xf0>
200008b4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
200008b8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
200008bc:	81a3      	strh	r3, [r4, #12]
200008be:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
200008c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
200008c4:	4407      	add	r7, r0
200008c6:	1a36      	subs	r6, r6, r0
200008c8:	e7e9      	b.n	2000089e <__sflush_r+0xca>
200008ca:	bf00      	nop
200008cc:	20400001 	.word	0x20400001

200008d0 <_fflush_r>:
200008d0:	b538      	push	{r3, r4, r5, lr}
200008d2:	690b      	ldr	r3, [r1, #16]
200008d4:	4605      	mov	r5, r0
200008d6:	460c      	mov	r4, r1
200008d8:	b913      	cbnz	r3, 200008e0 <_fflush_r+0x10>
200008da:	2500      	movs	r5, #0
200008dc:	4628      	mov	r0, r5
200008de:	bd38      	pop	{r3, r4, r5, pc}
200008e0:	b118      	cbz	r0, 200008ea <_fflush_r+0x1a>
200008e2:	6a03      	ldr	r3, [r0, #32]
200008e4:	b90b      	cbnz	r3, 200008ea <_fflush_r+0x1a>
200008e6:	f000 f9db 	bl	20000ca0 <__sinit>
200008ea:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
200008ee:	2b00      	cmp	r3, #0
200008f0:	d0f3      	beq.n	200008da <_fflush_r+0xa>
200008f2:	6e62      	ldr	r2, [r4, #100]	@ 0x64
200008f4:	07d0      	lsls	r0, r2, #31
200008f6:	d404      	bmi.n	20000902 <_fflush_r+0x32>
200008f8:	0599      	lsls	r1, r3, #22
200008fa:	d402      	bmi.n	20000902 <_fflush_r+0x32>
200008fc:	6da0      	ldr	r0, [r4, #88]	@ 0x58
200008fe:	f000 fac2 	bl	20000e86 <__retarget_lock_acquire_recursive>
20000902:	4628      	mov	r0, r5
20000904:	4621      	mov	r1, r4
20000906:	f7ff ff65 	bl	200007d4 <__sflush_r>
2000090a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
2000090c:	07da      	lsls	r2, r3, #31
2000090e:	4605      	mov	r5, r0
20000910:	d4e4      	bmi.n	200008dc <_fflush_r+0xc>
20000912:	89a3      	ldrh	r3, [r4, #12]
20000914:	059b      	lsls	r3, r3, #22
20000916:	d4e1      	bmi.n	200008dc <_fflush_r+0xc>
20000918:	6da0      	ldr	r0, [r4, #88]	@ 0x58
2000091a:	f000 faba 	bl	20000e92 <__retarget_lock_release_recursive>
2000091e:	e7dd      	b.n	200008dc <_fflush_r+0xc>

20000920 <fflush>:
20000920:	4601      	mov	r1, r0
20000922:	b920      	cbnz	r0, 2000092e <fflush+0xe>
20000924:	4a04      	ldr	r2, [pc, #16]	@ (20000938 <fflush+0x18>)
20000926:	4905      	ldr	r1, [pc, #20]	@ (2000093c <fflush+0x1c>)
20000928:	4805      	ldr	r0, [pc, #20]	@ (20000940 <fflush+0x20>)
2000092a:	f000 b9ed 	b.w	20000d08 <_fwalk_sglue>
2000092e:	4b05      	ldr	r3, [pc, #20]	@ (20000944 <fflush+0x24>)
20000930:	6818      	ldr	r0, [r3, #0]
20000932:	f7ff bfcd 	b.w	200008d0 <_fflush_r>
20000936:	bf00      	nop
20000938:	20001dbc 	.word	0x20001dbc
2000093c:	200008d1 	.word	0x200008d1
20000940:	20001dcc 	.word	0x20001dcc
20000944:	20001dc8 	.word	0x20001dc8

20000948 <setvbuf>:
20000948:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
2000094c:	461d      	mov	r5, r3
2000094e:	4b57      	ldr	r3, [pc, #348]	@ (20000aac <setvbuf+0x164>)
20000950:	681f      	ldr	r7, [r3, #0]
20000952:	4604      	mov	r4, r0
20000954:	460e      	mov	r6, r1
20000956:	4690      	mov	r8, r2
20000958:	b127      	cbz	r7, 20000964 <setvbuf+0x1c>
2000095a:	6a3b      	ldr	r3, [r7, #32]
2000095c:	b913      	cbnz	r3, 20000964 <setvbuf+0x1c>
2000095e:	4638      	mov	r0, r7
20000960:	f000 f99e 	bl	20000ca0 <__sinit>
20000964:	f1b8 0f02 	cmp.w	r8, #2
20000968:	d006      	beq.n	20000978 <setvbuf+0x30>
2000096a:	f1b8 0f01 	cmp.w	r8, #1
2000096e:	f200 809a 	bhi.w	20000aa6 <setvbuf+0x15e>
20000972:	2d00      	cmp	r5, #0
20000974:	f2c0 8097 	blt.w	20000aa6 <setvbuf+0x15e>
20000978:	6e63      	ldr	r3, [r4, #100]	@ 0x64
2000097a:	07d9      	lsls	r1, r3, #31
2000097c:	d405      	bmi.n	2000098a <setvbuf+0x42>
2000097e:	89a3      	ldrh	r3, [r4, #12]
20000980:	059a      	lsls	r2, r3, #22
20000982:	d402      	bmi.n	2000098a <setvbuf+0x42>
20000984:	6da0      	ldr	r0, [r4, #88]	@ 0x58
20000986:	f000 fa7e 	bl	20000e86 <__retarget_lock_acquire_recursive>
2000098a:	4621      	mov	r1, r4
2000098c:	4638      	mov	r0, r7
2000098e:	f7ff ff9f 	bl	200008d0 <_fflush_r>
20000992:	6b61      	ldr	r1, [r4, #52]	@ 0x34
20000994:	b141      	cbz	r1, 200009a8 <setvbuf+0x60>
20000996:	f104 0344 	add.w	r3, r4, #68	@ 0x44
2000099a:	4299      	cmp	r1, r3
2000099c:	d002      	beq.n	200009a4 <setvbuf+0x5c>
2000099e:	4638      	mov	r0, r7
200009a0:	f000 fae8 	bl	20000f74 <_free_r>
200009a4:	2300      	movs	r3, #0
200009a6:	6363      	str	r3, [r4, #52]	@ 0x34
200009a8:	2300      	movs	r3, #0
200009aa:	61a3      	str	r3, [r4, #24]
200009ac:	6063      	str	r3, [r4, #4]
200009ae:	89a3      	ldrh	r3, [r4, #12]
200009b0:	061b      	lsls	r3, r3, #24
200009b2:	d503      	bpl.n	200009bc <setvbuf+0x74>
200009b4:	6921      	ldr	r1, [r4, #16]
200009b6:	4638      	mov	r0, r7
200009b8:	f000 fadc 	bl	20000f74 <_free_r>
200009bc:	89a3      	ldrh	r3, [r4, #12]
200009be:	f423 634a 	bic.w	r3, r3, #3232	@ 0xca0
200009c2:	f023 0303 	bic.w	r3, r3, #3
200009c6:	f1b8 0f02 	cmp.w	r8, #2
200009ca:	81a3      	strh	r3, [r4, #12]
200009cc:	d061      	beq.n	20000a92 <setvbuf+0x14a>
200009ce:	ab01      	add	r3, sp, #4
200009d0:	466a      	mov	r2, sp
200009d2:	4621      	mov	r1, r4
200009d4:	4638      	mov	r0, r7
200009d6:	f000 f9b5 	bl	20000d44 <__swhatbuf_r>
200009da:	89a3      	ldrh	r3, [r4, #12]
200009dc:	4318      	orrs	r0, r3
200009de:	81a0      	strh	r0, [r4, #12]
200009e0:	bb2d      	cbnz	r5, 20000a2e <setvbuf+0xe6>
200009e2:	9d00      	ldr	r5, [sp, #0]
200009e4:	4628      	mov	r0, r5
200009e6:	f000 fc65 	bl	200012b4 <malloc>
200009ea:	4606      	mov	r6, r0
200009ec:	2800      	cmp	r0, #0
200009ee:	d152      	bne.n	20000a96 <setvbuf+0x14e>
200009f0:	f8dd 9000 	ldr.w	r9, [sp]
200009f4:	45a9      	cmp	r9, r5
200009f6:	d140      	bne.n	20000a7a <setvbuf+0x132>
200009f8:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
200009fc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
20000a00:	f043 0202 	orr.w	r2, r3, #2
20000a04:	81a2      	strh	r2, [r4, #12]
20000a06:	2200      	movs	r2, #0
20000a08:	60a2      	str	r2, [r4, #8]
20000a0a:	f104 0247 	add.w	r2, r4, #71	@ 0x47
20000a0e:	6022      	str	r2, [r4, #0]
20000a10:	6122      	str	r2, [r4, #16]
20000a12:	2201      	movs	r2, #1
20000a14:	6162      	str	r2, [r4, #20]
20000a16:	6e62      	ldr	r2, [r4, #100]	@ 0x64
20000a18:	07d6      	lsls	r6, r2, #31
20000a1a:	d404      	bmi.n	20000a26 <setvbuf+0xde>
20000a1c:	0598      	lsls	r0, r3, #22
20000a1e:	d402      	bmi.n	20000a26 <setvbuf+0xde>
20000a20:	6da0      	ldr	r0, [r4, #88]	@ 0x58
20000a22:	f000 fa36 	bl	20000e92 <__retarget_lock_release_recursive>
20000a26:	4628      	mov	r0, r5
20000a28:	b003      	add	sp, #12
20000a2a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
20000a2e:	2e00      	cmp	r6, #0
20000a30:	d0d8      	beq.n	200009e4 <setvbuf+0x9c>
20000a32:	6a3b      	ldr	r3, [r7, #32]
20000a34:	b913      	cbnz	r3, 20000a3c <setvbuf+0xf4>
20000a36:	4638      	mov	r0, r7
20000a38:	f000 f932 	bl	20000ca0 <__sinit>
20000a3c:	f1b8 0f01 	cmp.w	r8, #1
20000a40:	bf08      	it	eq
20000a42:	89a3      	ldrheq	r3, [r4, #12]
20000a44:	6026      	str	r6, [r4, #0]
20000a46:	bf04      	itt	eq
20000a48:	f043 0301 	orreq.w	r3, r3, #1
20000a4c:	81a3      	strheq	r3, [r4, #12]
20000a4e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
20000a52:	f013 0208 	ands.w	r2, r3, #8
20000a56:	e9c4 6504 	strd	r6, r5, [r4, #16]
20000a5a:	d01e      	beq.n	20000a9a <setvbuf+0x152>
20000a5c:	07d9      	lsls	r1, r3, #31
20000a5e:	bf41      	itttt	mi
20000a60:	2200      	movmi	r2, #0
20000a62:	426d      	negmi	r5, r5
20000a64:	60a2      	strmi	r2, [r4, #8]
20000a66:	61a5      	strmi	r5, [r4, #24]
20000a68:	bf58      	it	pl
20000a6a:	60a5      	strpl	r5, [r4, #8]
20000a6c:	6e62      	ldr	r2, [r4, #100]	@ 0x64
20000a6e:	07d2      	lsls	r2, r2, #31
20000a70:	d401      	bmi.n	20000a76 <setvbuf+0x12e>
20000a72:	059b      	lsls	r3, r3, #22
20000a74:	d513      	bpl.n	20000a9e <setvbuf+0x156>
20000a76:	2500      	movs	r5, #0
20000a78:	e7d5      	b.n	20000a26 <setvbuf+0xde>
20000a7a:	4648      	mov	r0, r9
20000a7c:	f000 fc1a 	bl	200012b4 <malloc>
20000a80:	4606      	mov	r6, r0
20000a82:	2800      	cmp	r0, #0
20000a84:	d0b8      	beq.n	200009f8 <setvbuf+0xb0>
20000a86:	89a3      	ldrh	r3, [r4, #12]
20000a88:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
20000a8c:	81a3      	strh	r3, [r4, #12]
20000a8e:	464d      	mov	r5, r9
20000a90:	e7cf      	b.n	20000a32 <setvbuf+0xea>
20000a92:	2500      	movs	r5, #0
20000a94:	e7b2      	b.n	200009fc <setvbuf+0xb4>
20000a96:	46a9      	mov	r9, r5
20000a98:	e7f5      	b.n	20000a86 <setvbuf+0x13e>
20000a9a:	60a2      	str	r2, [r4, #8]
20000a9c:	e7e6      	b.n	20000a6c <setvbuf+0x124>
20000a9e:	6da0      	ldr	r0, [r4, #88]	@ 0x58
20000aa0:	f000 f9f7 	bl	20000e92 <__retarget_lock_release_recursive>
20000aa4:	e7e7      	b.n	20000a76 <setvbuf+0x12e>
20000aa6:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
20000aaa:	e7bc      	b.n	20000a26 <setvbuf+0xde>
20000aac:	20001dc8 	.word	0x20001dc8

20000ab0 <std>:
20000ab0:	2300      	movs	r3, #0
20000ab2:	b510      	push	{r4, lr}
20000ab4:	4604      	mov	r4, r0
20000ab6:	e9c0 3300 	strd	r3, r3, [r0]
20000aba:	e9c0 3304 	strd	r3, r3, [r0, #16]
20000abe:	6083      	str	r3, [r0, #8]
20000ac0:	8181      	strh	r1, [r0, #12]
20000ac2:	6643      	str	r3, [r0, #100]	@ 0x64
20000ac4:	81c2      	strh	r2, [r0, #14]
20000ac6:	6183      	str	r3, [r0, #24]
20000ac8:	4619      	mov	r1, r3
20000aca:	2208      	movs	r2, #8
20000acc:	305c      	adds	r0, #92	@ 0x5c
20000ace:	f000 f9b7 	bl	20000e40 <memset>
20000ad2:	4b0d      	ldr	r3, [pc, #52]	@ (20000b08 <std+0x58>)
20000ad4:	6263      	str	r3, [r4, #36]	@ 0x24
20000ad6:	4b0d      	ldr	r3, [pc, #52]	@ (20000b0c <std+0x5c>)
20000ad8:	62a3      	str	r3, [r4, #40]	@ 0x28
20000ada:	4b0d      	ldr	r3, [pc, #52]	@ (20000b10 <std+0x60>)
20000adc:	62e3      	str	r3, [r4, #44]	@ 0x2c
20000ade:	4b0d      	ldr	r3, [pc, #52]	@ (20000b14 <std+0x64>)
20000ae0:	6323      	str	r3, [r4, #48]	@ 0x30
20000ae2:	4b0d      	ldr	r3, [pc, #52]	@ (20000b18 <std+0x68>)
20000ae4:	6224      	str	r4, [r4, #32]
20000ae6:	429c      	cmp	r4, r3
20000ae8:	d006      	beq.n	20000af8 <std+0x48>
20000aea:	f103 0268 	add.w	r2, r3, #104	@ 0x68
20000aee:	4294      	cmp	r4, r2
20000af0:	d002      	beq.n	20000af8 <std+0x48>
20000af2:	33d0      	adds	r3, #208	@ 0xd0
20000af4:	429c      	cmp	r4, r3
20000af6:	d105      	bne.n	20000b04 <std+0x54>
20000af8:	f104 0058 	add.w	r0, r4, #88	@ 0x58
20000afc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
20000b00:	f000 b9bd 	b.w	20000e7e <__retarget_lock_init_recursive>
20000b04:	bd10      	pop	{r4, pc}
20000b06:	bf00      	nop
20000b08:	2000174d 	.word	0x2000174d
20000b0c:	20001773 	.word	0x20001773
20000b10:	200017ab 	.word	0x200017ab
20000b14:	200017d1 	.word	0x200017d1
20000b18:	20001e84 	.word	0x20001e84

20000b1c <stdio_exit_handler>:
20000b1c:	4a02      	ldr	r2, [pc, #8]	@ (20000b28 <stdio_exit_handler+0xc>)
20000b1e:	4903      	ldr	r1, [pc, #12]	@ (20000b2c <stdio_exit_handler+0x10>)
20000b20:	4803      	ldr	r0, [pc, #12]	@ (20000b30 <stdio_exit_handler+0x14>)
20000b22:	f000 b8f1 	b.w	20000d08 <_fwalk_sglue>
20000b26:	bf00      	nop
20000b28:	20001dbc 	.word	0x20001dbc
20000b2c:	200008d1 	.word	0x200008d1
20000b30:	20001dcc 	.word	0x20001dcc

20000b34 <cleanup_stdio>:
20000b34:	6841      	ldr	r1, [r0, #4]
20000b36:	4b0c      	ldr	r3, [pc, #48]	@ (20000b68 <cleanup_stdio+0x34>)
20000b38:	4299      	cmp	r1, r3
20000b3a:	b510      	push	{r4, lr}
20000b3c:	4604      	mov	r4, r0
20000b3e:	d001      	beq.n	20000b44 <cleanup_stdio+0x10>
20000b40:	f7ff fec6 	bl	200008d0 <_fflush_r>
20000b44:	68a1      	ldr	r1, [r4, #8]
20000b46:	4b09      	ldr	r3, [pc, #36]	@ (20000b6c <cleanup_stdio+0x38>)
20000b48:	4299      	cmp	r1, r3
20000b4a:	d002      	beq.n	20000b52 <cleanup_stdio+0x1e>
20000b4c:	4620      	mov	r0, r4
20000b4e:	f7ff febf 	bl	200008d0 <_fflush_r>
20000b52:	68e1      	ldr	r1, [r4, #12]
20000b54:	4b06      	ldr	r3, [pc, #24]	@ (20000b70 <cleanup_stdio+0x3c>)
20000b56:	4299      	cmp	r1, r3
20000b58:	d004      	beq.n	20000b64 <cleanup_stdio+0x30>
20000b5a:	4620      	mov	r0, r4
20000b5c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
20000b60:	f7ff beb6 	b.w	200008d0 <_fflush_r>
20000b64:	bd10      	pop	{r4, pc}
20000b66:	bf00      	nop
20000b68:	20001e84 	.word	0x20001e84
20000b6c:	20001eec 	.word	0x20001eec
20000b70:	20001f54 	.word	0x20001f54

20000b74 <__fp_lock>:
20000b74:	b508      	push	{r3, lr}
20000b76:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
20000b78:	07da      	lsls	r2, r3, #31
20000b7a:	d405      	bmi.n	20000b88 <__fp_lock+0x14>
20000b7c:	898b      	ldrh	r3, [r1, #12]
20000b7e:	059b      	lsls	r3, r3, #22
20000b80:	d402      	bmi.n	20000b88 <__fp_lock+0x14>
20000b82:	6d88      	ldr	r0, [r1, #88]	@ 0x58
20000b84:	f000 f97f 	bl	20000e86 <__retarget_lock_acquire_recursive>
20000b88:	2000      	movs	r0, #0
20000b8a:	bd08      	pop	{r3, pc}

20000b8c <__fp_unlock>:
20000b8c:	b508      	push	{r3, lr}
20000b8e:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
20000b90:	07da      	lsls	r2, r3, #31
20000b92:	d405      	bmi.n	20000ba0 <__fp_unlock+0x14>
20000b94:	898b      	ldrh	r3, [r1, #12]
20000b96:	059b      	lsls	r3, r3, #22
20000b98:	d402      	bmi.n	20000ba0 <__fp_unlock+0x14>
20000b9a:	6d88      	ldr	r0, [r1, #88]	@ 0x58
20000b9c:	f000 f979 	bl	20000e92 <__retarget_lock_release_recursive>
20000ba0:	2000      	movs	r0, #0
20000ba2:	bd08      	pop	{r3, pc}

20000ba4 <global_stdio_init.part.0>:
20000ba4:	4b0c      	ldr	r3, [pc, #48]	@ (20000bd8 <global_stdio_init.part.0+0x34>)
20000ba6:	4a0d      	ldr	r2, [pc, #52]	@ (20000bdc <global_stdio_init.part.0+0x38>)
20000ba8:	480d      	ldr	r0, [pc, #52]	@ (20000be0 <global_stdio_init.part.0+0x3c>)
20000baa:	b510      	push	{r4, lr}
20000bac:	2104      	movs	r1, #4
20000bae:	601a      	str	r2, [r3, #0]
20000bb0:	2200      	movs	r2, #0
20000bb2:	f7ff ff7d 	bl	20000ab0 <std>
20000bb6:	4b0a      	ldr	r3, [pc, #40]	@ (20000be0 <global_stdio_init.part.0+0x3c>)
20000bb8:	2201      	movs	r2, #1
20000bba:	461c      	mov	r4, r3
20000bbc:	2109      	movs	r1, #9
20000bbe:	f103 0068 	add.w	r0, r3, #104	@ 0x68
20000bc2:	f7ff ff75 	bl	20000ab0 <std>
20000bc6:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
20000bca:	2202      	movs	r2, #2
20000bcc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
20000bd0:	2112      	movs	r1, #18
20000bd2:	f7ff bf6d 	b.w	20000ab0 <std>
20000bd6:	bf00      	nop
20000bd8:	20001fbc 	.word	0x20001fbc
20000bdc:	20000b1d 	.word	0x20000b1d
20000be0:	20001e84 	.word	0x20001e84

20000be4 <__sfp_lock_acquire>:
20000be4:	4801      	ldr	r0, [pc, #4]	@ (20000bec <__sfp_lock_acquire+0x8>)
20000be6:	f000 b94e 	b.w	20000e86 <__retarget_lock_acquire_recursive>
20000bea:	bf00      	nop
20000bec:	20001fc7 	.word	0x20001fc7

20000bf0 <__sfp_lock_release>:
20000bf0:	4801      	ldr	r0, [pc, #4]	@ (20000bf8 <__sfp_lock_release+0x8>)
20000bf2:	f000 b94e 	b.w	20000e92 <__retarget_lock_release_recursive>
20000bf6:	bf00      	nop
20000bf8:	20001fc7 	.word	0x20001fc7

20000bfc <__sfp>:
20000bfc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
20000bfe:	4607      	mov	r7, r0
20000c00:	f7ff fff0 	bl	20000be4 <__sfp_lock_acquire>
20000c04:	4b23      	ldr	r3, [pc, #140]	@ (20000c94 <__sfp+0x98>)
20000c06:	681b      	ldr	r3, [r3, #0]
20000c08:	b90b      	cbnz	r3, 20000c0e <__sfp+0x12>
20000c0a:	f7ff ffcb 	bl	20000ba4 <global_stdio_init.part.0>
20000c0e:	4e22      	ldr	r6, [pc, #136]	@ (20000c98 <__sfp+0x9c>)
20000c10:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
20000c14:	3b01      	subs	r3, #1
20000c16:	d50f      	bpl.n	20000c38 <__sfp+0x3c>
20000c18:	6835      	ldr	r5, [r6, #0]
20000c1a:	2d00      	cmp	r5, #0
20000c1c:	d138      	bne.n	20000c90 <__sfp+0x94>
20000c1e:	f44f 71d6 	mov.w	r1, #428	@ 0x1ac
20000c22:	4638      	mov	r0, r7
20000c24:	f000 fb78 	bl	20001318 <_malloc_r>
20000c28:	4604      	mov	r4, r0
20000c2a:	bb28      	cbnz	r0, 20000c78 <__sfp+0x7c>
20000c2c:	6030      	str	r0, [r6, #0]
20000c2e:	f7ff ffdf 	bl	20000bf0 <__sfp_lock_release>
20000c32:	230c      	movs	r3, #12
20000c34:	603b      	str	r3, [r7, #0]
20000c36:	e01b      	b.n	20000c70 <__sfp+0x74>
20000c38:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
20000c3c:	b9d5      	cbnz	r5, 20000c74 <__sfp+0x78>
20000c3e:	4b17      	ldr	r3, [pc, #92]	@ (20000c9c <__sfp+0xa0>)
20000c40:	60e3      	str	r3, [r4, #12]
20000c42:	f104 0058 	add.w	r0, r4, #88	@ 0x58
20000c46:	6665      	str	r5, [r4, #100]	@ 0x64
20000c48:	f000 f919 	bl	20000e7e <__retarget_lock_init_recursive>
20000c4c:	f7ff ffd0 	bl	20000bf0 <__sfp_lock_release>
20000c50:	e9c4 5501 	strd	r5, r5, [r4, #4]
20000c54:	e9c4 5504 	strd	r5, r5, [r4, #16]
20000c58:	6025      	str	r5, [r4, #0]
20000c5a:	61a5      	str	r5, [r4, #24]
20000c5c:	2208      	movs	r2, #8
20000c5e:	4629      	mov	r1, r5
20000c60:	f104 005c 	add.w	r0, r4, #92	@ 0x5c
20000c64:	f000 f8ec 	bl	20000e40 <memset>
20000c68:	e9c4 550d 	strd	r5, r5, [r4, #52]	@ 0x34
20000c6c:	e9c4 5512 	strd	r5, r5, [r4, #72]	@ 0x48
20000c70:	4620      	mov	r0, r4
20000c72:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
20000c74:	3468      	adds	r4, #104	@ 0x68
20000c76:	e7cd      	b.n	20000c14 <__sfp+0x18>
20000c78:	2304      	movs	r3, #4
20000c7a:	6005      	str	r5, [r0, #0]
20000c7c:	6043      	str	r3, [r0, #4]
20000c7e:	300c      	adds	r0, #12
20000c80:	4629      	mov	r1, r5
20000c82:	60a0      	str	r0, [r4, #8]
20000c84:	f44f 72d0 	mov.w	r2, #416	@ 0x1a0
20000c88:	f000 f8da 	bl	20000e40 <memset>
20000c8c:	4625      	mov	r5, r4
20000c8e:	6034      	str	r4, [r6, #0]
20000c90:	462e      	mov	r6, r5
20000c92:	e7bd      	b.n	20000c10 <__sfp+0x14>
20000c94:	20001fbc 	.word	0x20001fbc
20000c98:	20001dbc 	.word	0x20001dbc
20000c9c:	ffff0001 	.word	0xffff0001

20000ca0 <__sinit>:
20000ca0:	b510      	push	{r4, lr}
20000ca2:	4604      	mov	r4, r0
20000ca4:	f7ff ff9e 	bl	20000be4 <__sfp_lock_acquire>
20000ca8:	6a23      	ldr	r3, [r4, #32]
20000caa:	b11b      	cbz	r3, 20000cb4 <__sinit+0x14>
20000cac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
20000cb0:	f7ff bf9e 	b.w	20000bf0 <__sfp_lock_release>
20000cb4:	4b04      	ldr	r3, [pc, #16]	@ (20000cc8 <__sinit+0x28>)
20000cb6:	6223      	str	r3, [r4, #32]
20000cb8:	4b04      	ldr	r3, [pc, #16]	@ (20000ccc <__sinit+0x2c>)
20000cba:	681b      	ldr	r3, [r3, #0]
20000cbc:	2b00      	cmp	r3, #0
20000cbe:	d1f5      	bne.n	20000cac <__sinit+0xc>
20000cc0:	f7ff ff70 	bl	20000ba4 <global_stdio_init.part.0>
20000cc4:	e7f2      	b.n	20000cac <__sinit+0xc>
20000cc6:	bf00      	nop
20000cc8:	20000b35 	.word	0x20000b35
20000ccc:	20001fbc 	.word	0x20001fbc

20000cd0 <__fp_lock_all>:
20000cd0:	b508      	push	{r3, lr}
20000cd2:	f7ff ff87 	bl	20000be4 <__sfp_lock_acquire>
20000cd6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
20000cda:	4a02      	ldr	r2, [pc, #8]	@ (20000ce4 <__fp_lock_all+0x14>)
20000cdc:	4902      	ldr	r1, [pc, #8]	@ (20000ce8 <__fp_lock_all+0x18>)
20000cde:	2000      	movs	r0, #0
20000ce0:	f000 b812 	b.w	20000d08 <_fwalk_sglue>
20000ce4:	20001dbc 	.word	0x20001dbc
20000ce8:	20000b75 	.word	0x20000b75

20000cec <__fp_unlock_all>:
20000cec:	b508      	push	{r3, lr}
20000cee:	4a04      	ldr	r2, [pc, #16]	@ (20000d00 <__fp_unlock_all+0x14>)
20000cf0:	4904      	ldr	r1, [pc, #16]	@ (20000d04 <__fp_unlock_all+0x18>)
20000cf2:	2000      	movs	r0, #0
20000cf4:	f000 f808 	bl	20000d08 <_fwalk_sglue>
20000cf8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
20000cfc:	f7ff bf78 	b.w	20000bf0 <__sfp_lock_release>
20000d00:	20001dbc 	.word	0x20001dbc
20000d04:	20000b8d 	.word	0x20000b8d

20000d08 <_fwalk_sglue>:
20000d08:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
20000d0c:	4607      	mov	r7, r0
20000d0e:	4688      	mov	r8, r1
20000d10:	4614      	mov	r4, r2
20000d12:	2600      	movs	r6, #0
20000d14:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
20000d18:	f1b9 0901 	subs.w	r9, r9, #1
20000d1c:	d505      	bpl.n	20000d2a <_fwalk_sglue+0x22>
20000d1e:	6824      	ldr	r4, [r4, #0]
20000d20:	2c00      	cmp	r4, #0
20000d22:	d1f7      	bne.n	20000d14 <_fwalk_sglue+0xc>
20000d24:	4630      	mov	r0, r6
20000d26:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
20000d2a:	89ab      	ldrh	r3, [r5, #12]
20000d2c:	2b01      	cmp	r3, #1
20000d2e:	d907      	bls.n	20000d40 <_fwalk_sglue+0x38>
20000d30:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
20000d34:	3301      	adds	r3, #1
20000d36:	d003      	beq.n	20000d40 <_fwalk_sglue+0x38>
20000d38:	4629      	mov	r1, r5
20000d3a:	4638      	mov	r0, r7
20000d3c:	47c0      	blx	r8
20000d3e:	4306      	orrs	r6, r0
20000d40:	3568      	adds	r5, #104	@ 0x68
20000d42:	e7e9      	b.n	20000d18 <_fwalk_sglue+0x10>

20000d44 <__swhatbuf_r>:
20000d44:	b570      	push	{r4, r5, r6, lr}
20000d46:	460c      	mov	r4, r1
20000d48:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
20000d4c:	2900      	cmp	r1, #0
20000d4e:	b096      	sub	sp, #88	@ 0x58
20000d50:	4615      	mov	r5, r2
20000d52:	461e      	mov	r6, r3
20000d54:	da0a      	bge.n	20000d6c <__swhatbuf_r+0x28>
20000d56:	89a1      	ldrh	r1, [r4, #12]
20000d58:	f011 0180 	ands.w	r1, r1, #128	@ 0x80
20000d5c:	d113      	bne.n	20000d86 <__swhatbuf_r+0x42>
20000d5e:	f44f 6280 	mov.w	r2, #1024	@ 0x400
20000d62:	2000      	movs	r0, #0
20000d64:	6031      	str	r1, [r6, #0]
20000d66:	602a      	str	r2, [r5, #0]
20000d68:	b016      	add	sp, #88	@ 0x58
20000d6a:	bd70      	pop	{r4, r5, r6, pc}
20000d6c:	466a      	mov	r2, sp
20000d6e:	f000 f8ef 	bl	20000f50 <_fstat_r>
20000d72:	2800      	cmp	r0, #0
20000d74:	dbef      	blt.n	20000d56 <__swhatbuf_r+0x12>
20000d76:	9901      	ldr	r1, [sp, #4]
20000d78:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
20000d7c:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
20000d80:	4259      	negs	r1, r3
20000d82:	4159      	adcs	r1, r3
20000d84:	e7eb      	b.n	20000d5e <__swhatbuf_r+0x1a>
20000d86:	2100      	movs	r1, #0
20000d88:	2240      	movs	r2, #64	@ 0x40
20000d8a:	e7ea      	b.n	20000d62 <__swhatbuf_r+0x1e>

20000d8c <__smakebuf_r>:
20000d8c:	898b      	ldrh	r3, [r1, #12]
20000d8e:	b573      	push	{r0, r1, r4, r5, r6, lr}
20000d90:	079e      	lsls	r6, r3, #30
20000d92:	4605      	mov	r5, r0
20000d94:	460c      	mov	r4, r1
20000d96:	d507      	bpl.n	20000da8 <__smakebuf_r+0x1c>
20000d98:	f104 0347 	add.w	r3, r4, #71	@ 0x47
20000d9c:	6023      	str	r3, [r4, #0]
20000d9e:	6123      	str	r3, [r4, #16]
20000da0:	2301      	movs	r3, #1
20000da2:	6163      	str	r3, [r4, #20]
20000da4:	b002      	add	sp, #8
20000da6:	bd70      	pop	{r4, r5, r6, pc}
20000da8:	ab01      	add	r3, sp, #4
20000daa:	466a      	mov	r2, sp
20000dac:	f7ff ffca 	bl	20000d44 <__swhatbuf_r>
20000db0:	9e00      	ldr	r6, [sp, #0]
20000db2:	4628      	mov	r0, r5
20000db4:	4631      	mov	r1, r6
20000db6:	f000 faaf 	bl	20001318 <_malloc_r>
20000dba:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
20000dbe:	b938      	cbnz	r0, 20000dd0 <__smakebuf_r+0x44>
20000dc0:	059a      	lsls	r2, r3, #22
20000dc2:	d4ef      	bmi.n	20000da4 <__smakebuf_r+0x18>
20000dc4:	f023 0303 	bic.w	r3, r3, #3
20000dc8:	f043 0302 	orr.w	r3, r3, #2
20000dcc:	81a3      	strh	r3, [r4, #12]
20000dce:	e7e3      	b.n	20000d98 <__smakebuf_r+0xc>
20000dd0:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
20000dd4:	81a3      	strh	r3, [r4, #12]
20000dd6:	9b01      	ldr	r3, [sp, #4]
20000dd8:	6020      	str	r0, [r4, #0]
20000dda:	e9c4 0604 	strd	r0, r6, [r4, #16]
20000dde:	2b00      	cmp	r3, #0
20000de0:	d0e0      	beq.n	20000da4 <__smakebuf_r+0x18>
20000de2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
20000de6:	4628      	mov	r0, r5
20000de8:	f000 f832 	bl	20000e50 <_isatty_r>
20000dec:	2800      	cmp	r0, #0
20000dee:	d0d9      	beq.n	20000da4 <__smakebuf_r+0x18>
20000df0:	89a3      	ldrh	r3, [r4, #12]
20000df2:	f023 0303 	bic.w	r3, r3, #3
20000df6:	f043 0301 	orr.w	r3, r3, #1
20000dfa:	81a3      	strh	r3, [r4, #12]
20000dfc:	e7d2      	b.n	20000da4 <__smakebuf_r+0x18>

20000dfe <_iprintf_r>:
20000dfe:	b40e      	push	{r1, r2, r3}
20000e00:	b503      	push	{r0, r1, lr}
20000e02:	ab03      	add	r3, sp, #12
20000e04:	6881      	ldr	r1, [r0, #8]
20000e06:	f853 2b04 	ldr.w	r2, [r3], #4
20000e0a:	9301      	str	r3, [sp, #4]
20000e0c:	f000 f930 	bl	20001070 <_vfiprintf_r>
20000e10:	b002      	add	sp, #8
20000e12:	f85d eb04 	ldr.w	lr, [sp], #4
20000e16:	b003      	add	sp, #12
20000e18:	4770      	bx	lr
	...

20000e1c <iprintf>:
20000e1c:	b40f      	push	{r0, r1, r2, r3}
20000e1e:	b507      	push	{r0, r1, r2, lr}
20000e20:	4906      	ldr	r1, [pc, #24]	@ (20000e3c <iprintf+0x20>)
20000e22:	ab04      	add	r3, sp, #16
20000e24:	6808      	ldr	r0, [r1, #0]
20000e26:	f853 2b04 	ldr.w	r2, [r3], #4
20000e2a:	6881      	ldr	r1, [r0, #8]
20000e2c:	9301      	str	r3, [sp, #4]
20000e2e:	f000 f91f 	bl	20001070 <_vfiprintf_r>
20000e32:	b003      	add	sp, #12
20000e34:	f85d eb04 	ldr.w	lr, [sp], #4
20000e38:	b004      	add	sp, #16
20000e3a:	4770      	bx	lr
20000e3c:	20001dc8 	.word	0x20001dc8

20000e40 <memset>:
20000e40:	4402      	add	r2, r0
20000e42:	4603      	mov	r3, r0
20000e44:	4293      	cmp	r3, r2
20000e46:	d100      	bne.n	20000e4a <memset+0xa>
20000e48:	4770      	bx	lr
20000e4a:	f803 1b01 	strb.w	r1, [r3], #1
20000e4e:	e7f9      	b.n	20000e44 <memset+0x4>

20000e50 <_isatty_r>:
20000e50:	b538      	push	{r3, r4, r5, lr}
20000e52:	4d06      	ldr	r5, [pc, #24]	@ (20000e6c <_isatty_r+0x1c>)
20000e54:	2300      	movs	r3, #0
20000e56:	4604      	mov	r4, r0
20000e58:	4608      	mov	r0, r1
20000e5a:	602b      	str	r3, [r5, #0]
20000e5c:	f7ff fb76 	bl	2000054c <_isatty>
20000e60:	1c43      	adds	r3, r0, #1
20000e62:	d102      	bne.n	20000e6a <_isatty_r+0x1a>
20000e64:	682b      	ldr	r3, [r5, #0]
20000e66:	b103      	cbz	r3, 20000e6a <_isatty_r+0x1a>
20000e68:	6023      	str	r3, [r4, #0]
20000e6a:	bd38      	pop	{r3, r4, r5, pc}
20000e6c:	20001fc8 	.word	0x20001fc8

20000e70 <__errno>:
20000e70:	4b01      	ldr	r3, [pc, #4]	@ (20000e78 <__errno+0x8>)
20000e72:	6818      	ldr	r0, [r3, #0]
20000e74:	4770      	bx	lr
20000e76:	bf00      	nop
20000e78:	20001dc8 	.word	0x20001dc8

20000e7c <__retarget_lock_init>:
20000e7c:	4770      	bx	lr

20000e7e <__retarget_lock_init_recursive>:
20000e7e:	4770      	bx	lr

20000e80 <__retarget_lock_close>:
20000e80:	4770      	bx	lr

20000e82 <__retarget_lock_close_recursive>:
20000e82:	4770      	bx	lr

20000e84 <__retarget_lock_acquire>:
20000e84:	4770      	bx	lr

20000e86 <__retarget_lock_acquire_recursive>:
20000e86:	4770      	bx	lr

20000e88 <__retarget_lock_try_acquire>:
20000e88:	2001      	movs	r0, #1
20000e8a:	4770      	bx	lr

20000e8c <__retarget_lock_try_acquire_recursive>:
20000e8c:	2001      	movs	r0, #1
20000e8e:	4770      	bx	lr

20000e90 <__retarget_lock_release>:
20000e90:	4770      	bx	lr

20000e92 <__retarget_lock_release_recursive>:
20000e92:	4770      	bx	lr

20000e94 <_reclaim_reent>:
20000e94:	4b2d      	ldr	r3, [pc, #180]	@ (20000f4c <_reclaim_reent+0xb8>)
20000e96:	681b      	ldr	r3, [r3, #0]
20000e98:	4283      	cmp	r3, r0
20000e9a:	b570      	push	{r4, r5, r6, lr}
20000e9c:	4604      	mov	r4, r0
20000e9e:	d053      	beq.n	20000f48 <_reclaim_reent+0xb4>
20000ea0:	69c3      	ldr	r3, [r0, #28]
20000ea2:	b31b      	cbz	r3, 20000eec <_reclaim_reent+0x58>
20000ea4:	68db      	ldr	r3, [r3, #12]
20000ea6:	b163      	cbz	r3, 20000ec2 <_reclaim_reent+0x2e>
20000ea8:	2500      	movs	r5, #0
20000eaa:	69e3      	ldr	r3, [r4, #28]
20000eac:	68db      	ldr	r3, [r3, #12]
20000eae:	5959      	ldr	r1, [r3, r5]
20000eb0:	b9b1      	cbnz	r1, 20000ee0 <_reclaim_reent+0x4c>
20000eb2:	3504      	adds	r5, #4
20000eb4:	2d80      	cmp	r5, #128	@ 0x80
20000eb6:	d1f8      	bne.n	20000eaa <_reclaim_reent+0x16>
20000eb8:	69e3      	ldr	r3, [r4, #28]
20000eba:	4620      	mov	r0, r4
20000ebc:	68d9      	ldr	r1, [r3, #12]
20000ebe:	f000 f859 	bl	20000f74 <_free_r>
20000ec2:	69e3      	ldr	r3, [r4, #28]
20000ec4:	6819      	ldr	r1, [r3, #0]
20000ec6:	b111      	cbz	r1, 20000ece <_reclaim_reent+0x3a>
20000ec8:	4620      	mov	r0, r4
20000eca:	f000 f853 	bl	20000f74 <_free_r>
20000ece:	69e3      	ldr	r3, [r4, #28]
20000ed0:	689d      	ldr	r5, [r3, #8]
20000ed2:	b15d      	cbz	r5, 20000eec <_reclaim_reent+0x58>
20000ed4:	4629      	mov	r1, r5
20000ed6:	4620      	mov	r0, r4
20000ed8:	682d      	ldr	r5, [r5, #0]
20000eda:	f000 f84b 	bl	20000f74 <_free_r>
20000ede:	e7f8      	b.n	20000ed2 <_reclaim_reent+0x3e>
20000ee0:	680e      	ldr	r6, [r1, #0]
20000ee2:	4620      	mov	r0, r4
20000ee4:	f000 f846 	bl	20000f74 <_free_r>
20000ee8:	4631      	mov	r1, r6
20000eea:	e7e1      	b.n	20000eb0 <_reclaim_reent+0x1c>
20000eec:	6961      	ldr	r1, [r4, #20]
20000eee:	b111      	cbz	r1, 20000ef6 <_reclaim_reent+0x62>
20000ef0:	4620      	mov	r0, r4
20000ef2:	f000 f83f 	bl	20000f74 <_free_r>
20000ef6:	69e1      	ldr	r1, [r4, #28]
20000ef8:	b111      	cbz	r1, 20000f00 <_reclaim_reent+0x6c>
20000efa:	4620      	mov	r0, r4
20000efc:	f000 f83a 	bl	20000f74 <_free_r>
20000f00:	6b21      	ldr	r1, [r4, #48]	@ 0x30
20000f02:	b111      	cbz	r1, 20000f0a <_reclaim_reent+0x76>
20000f04:	4620      	mov	r0, r4
20000f06:	f000 f835 	bl	20000f74 <_free_r>
20000f0a:	6b61      	ldr	r1, [r4, #52]	@ 0x34
20000f0c:	b111      	cbz	r1, 20000f14 <_reclaim_reent+0x80>
20000f0e:	4620      	mov	r0, r4
20000f10:	f000 f830 	bl	20000f74 <_free_r>
20000f14:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
20000f16:	b111      	cbz	r1, 20000f1e <_reclaim_reent+0x8a>
20000f18:	4620      	mov	r0, r4
20000f1a:	f000 f82b 	bl	20000f74 <_free_r>
20000f1e:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
20000f20:	b111      	cbz	r1, 20000f28 <_reclaim_reent+0x94>
20000f22:	4620      	mov	r0, r4
20000f24:	f000 f826 	bl	20000f74 <_free_r>
20000f28:	6c61      	ldr	r1, [r4, #68]	@ 0x44
20000f2a:	b111      	cbz	r1, 20000f32 <_reclaim_reent+0x9e>
20000f2c:	4620      	mov	r0, r4
20000f2e:	f000 f821 	bl	20000f74 <_free_r>
20000f32:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
20000f34:	b111      	cbz	r1, 20000f3c <_reclaim_reent+0xa8>
20000f36:	4620      	mov	r0, r4
20000f38:	f000 f81c 	bl	20000f74 <_free_r>
20000f3c:	6a23      	ldr	r3, [r4, #32]
20000f3e:	b11b      	cbz	r3, 20000f48 <_reclaim_reent+0xb4>
20000f40:	4620      	mov	r0, r4
20000f42:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
20000f46:	4718      	bx	r3
20000f48:	bd70      	pop	{r4, r5, r6, pc}
20000f4a:	bf00      	nop
20000f4c:	20001dc8 	.word	0x20001dc8

20000f50 <_fstat_r>:
20000f50:	b538      	push	{r3, r4, r5, lr}
20000f52:	4d07      	ldr	r5, [pc, #28]	@ (20000f70 <_fstat_r+0x20>)
20000f54:	2300      	movs	r3, #0
20000f56:	4604      	mov	r4, r0
20000f58:	4608      	mov	r0, r1
20000f5a:	4611      	mov	r1, r2
20000f5c:	602b      	str	r3, [r5, #0]
20000f5e:	f7ff faf1 	bl	20000544 <_fstat>
20000f62:	1c43      	adds	r3, r0, #1
20000f64:	d102      	bne.n	20000f6c <_fstat_r+0x1c>
20000f66:	682b      	ldr	r3, [r5, #0]
20000f68:	b103      	cbz	r3, 20000f6c <_fstat_r+0x1c>
20000f6a:	6023      	str	r3, [r4, #0]
20000f6c:	bd38      	pop	{r3, r4, r5, pc}
20000f6e:	bf00      	nop
20000f70:	20001fc8 	.word	0x20001fc8

20000f74 <_free_r>:
20000f74:	b538      	push	{r3, r4, r5, lr}
20000f76:	4605      	mov	r5, r0
20000f78:	2900      	cmp	r1, #0
20000f7a:	d041      	beq.n	20001000 <_free_r+0x8c>
20000f7c:	f851 3c04 	ldr.w	r3, [r1, #-4]
20000f80:	1f0c      	subs	r4, r1, #4
20000f82:	2b00      	cmp	r3, #0
20000f84:	bfb8      	it	lt
20000f86:	18e4      	addlt	r4, r4, r3
20000f88:	f000 fbd4 	bl	20001734 <__malloc_lock>
20000f8c:	4a1d      	ldr	r2, [pc, #116]	@ (20001004 <_free_r+0x90>)
20000f8e:	6813      	ldr	r3, [r2, #0]
20000f90:	b933      	cbnz	r3, 20000fa0 <_free_r+0x2c>
20000f92:	6063      	str	r3, [r4, #4]
20000f94:	6014      	str	r4, [r2, #0]
20000f96:	4628      	mov	r0, r5
20000f98:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
20000f9c:	f000 bbd0 	b.w	20001740 <__malloc_unlock>
20000fa0:	42a3      	cmp	r3, r4
20000fa2:	d908      	bls.n	20000fb6 <_free_r+0x42>
20000fa4:	6820      	ldr	r0, [r4, #0]
20000fa6:	1821      	adds	r1, r4, r0
20000fa8:	428b      	cmp	r3, r1
20000faa:	bf01      	itttt	eq
20000fac:	6819      	ldreq	r1, [r3, #0]
20000fae:	685b      	ldreq	r3, [r3, #4]
20000fb0:	1809      	addeq	r1, r1, r0
20000fb2:	6021      	streq	r1, [r4, #0]
20000fb4:	e7ed      	b.n	20000f92 <_free_r+0x1e>
20000fb6:	461a      	mov	r2, r3
20000fb8:	685b      	ldr	r3, [r3, #4]
20000fba:	b10b      	cbz	r3, 20000fc0 <_free_r+0x4c>
20000fbc:	42a3      	cmp	r3, r4
20000fbe:	d9fa      	bls.n	20000fb6 <_free_r+0x42>
20000fc0:	6811      	ldr	r1, [r2, #0]
20000fc2:	1850      	adds	r0, r2, r1
20000fc4:	42a0      	cmp	r0, r4
20000fc6:	d10b      	bne.n	20000fe0 <_free_r+0x6c>
20000fc8:	6820      	ldr	r0, [r4, #0]
20000fca:	4401      	add	r1, r0
20000fcc:	1850      	adds	r0, r2, r1
20000fce:	4283      	cmp	r3, r0
20000fd0:	6011      	str	r1, [r2, #0]
20000fd2:	d1e0      	bne.n	20000f96 <_free_r+0x22>
20000fd4:	6818      	ldr	r0, [r3, #0]
20000fd6:	685b      	ldr	r3, [r3, #4]
20000fd8:	6053      	str	r3, [r2, #4]
20000fda:	4408      	add	r0, r1
20000fdc:	6010      	str	r0, [r2, #0]
20000fde:	e7da      	b.n	20000f96 <_free_r+0x22>
20000fe0:	d902      	bls.n	20000fe8 <_free_r+0x74>
20000fe2:	230c      	movs	r3, #12
20000fe4:	602b      	str	r3, [r5, #0]
20000fe6:	e7d6      	b.n	20000f96 <_free_r+0x22>
20000fe8:	6820      	ldr	r0, [r4, #0]
20000fea:	1821      	adds	r1, r4, r0
20000fec:	428b      	cmp	r3, r1
20000fee:	bf04      	itt	eq
20000ff0:	6819      	ldreq	r1, [r3, #0]
20000ff2:	685b      	ldreq	r3, [r3, #4]
20000ff4:	6063      	str	r3, [r4, #4]
20000ff6:	bf04      	itt	eq
20000ff8:	1809      	addeq	r1, r1, r0
20000ffa:	6021      	streq	r1, [r4, #0]
20000ffc:	6054      	str	r4, [r2, #4]
20000ffe:	e7ca      	b.n	20000f96 <_free_r+0x22>
20001000:	bd38      	pop	{r3, r4, r5, pc}
20001002:	bf00      	nop
20001004:	20001fd0 	.word	0x20001fd0

20001008 <__sfputc_r>:
20001008:	6893      	ldr	r3, [r2, #8]
2000100a:	3b01      	subs	r3, #1
2000100c:	2b00      	cmp	r3, #0
2000100e:	b410      	push	{r4}
20001010:	6093      	str	r3, [r2, #8]
20001012:	da07      	bge.n	20001024 <__sfputc_r+0x1c>
20001014:	6994      	ldr	r4, [r2, #24]
20001016:	42a3      	cmp	r3, r4
20001018:	db01      	blt.n	2000101e <__sfputc_r+0x16>
2000101a:	290a      	cmp	r1, #10
2000101c:	d102      	bne.n	20001024 <__sfputc_r+0x1c>
2000101e:	bc10      	pop	{r4}
20001020:	f000 bbda 	b.w	200017d8 <__swbuf_r>
20001024:	6813      	ldr	r3, [r2, #0]
20001026:	1c58      	adds	r0, r3, #1
20001028:	6010      	str	r0, [r2, #0]
2000102a:	7019      	strb	r1, [r3, #0]
2000102c:	4608      	mov	r0, r1
2000102e:	bc10      	pop	{r4}
20001030:	4770      	bx	lr

20001032 <__sfputs_r>:
20001032:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
20001034:	4606      	mov	r6, r0
20001036:	460f      	mov	r7, r1
20001038:	4614      	mov	r4, r2
2000103a:	18d5      	adds	r5, r2, r3
2000103c:	42ac      	cmp	r4, r5
2000103e:	d101      	bne.n	20001044 <__sfputs_r+0x12>
20001040:	2000      	movs	r0, #0
20001042:	e007      	b.n	20001054 <__sfputs_r+0x22>
20001044:	f814 1b01 	ldrb.w	r1, [r4], #1
20001048:	463a      	mov	r2, r7
2000104a:	4630      	mov	r0, r6
2000104c:	f7ff ffdc 	bl	20001008 <__sfputc_r>
20001050:	1c43      	adds	r3, r0, #1
20001052:	d1f3      	bne.n	2000103c <__sfputs_r+0xa>
20001054:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

20001056 <__sprint_r>:
20001056:	6893      	ldr	r3, [r2, #8]
20001058:	b510      	push	{r4, lr}
2000105a:	4614      	mov	r4, r2
2000105c:	b133      	cbz	r3, 2000106c <__sprint_r+0x16>
2000105e:	f000 fc55 	bl	2000190c <__sfvwrite_r>
20001062:	2300      	movs	r3, #0
20001064:	60a3      	str	r3, [r4, #8]
20001066:	2300      	movs	r3, #0
20001068:	6063      	str	r3, [r4, #4]
2000106a:	bd10      	pop	{r4, pc}
2000106c:	4618      	mov	r0, r3
2000106e:	e7fa      	b.n	20001066 <__sprint_r+0x10>

20001070 <_vfiprintf_r>:
20001070:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
20001074:	460d      	mov	r5, r1
20001076:	b09d      	sub	sp, #116	@ 0x74
20001078:	4614      	mov	r4, r2
2000107a:	4698      	mov	r8, r3
2000107c:	4606      	mov	r6, r0
2000107e:	b118      	cbz	r0, 20001088 <_vfiprintf_r+0x18>
20001080:	6a03      	ldr	r3, [r0, #32]
20001082:	b90b      	cbnz	r3, 20001088 <_vfiprintf_r+0x18>
20001084:	f7ff fe0c 	bl	20000ca0 <__sinit>
20001088:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
2000108a:	07d9      	lsls	r1, r3, #31
2000108c:	d405      	bmi.n	2000109a <_vfiprintf_r+0x2a>
2000108e:	89ab      	ldrh	r3, [r5, #12]
20001090:	059a      	lsls	r2, r3, #22
20001092:	d402      	bmi.n	2000109a <_vfiprintf_r+0x2a>
20001094:	6da8      	ldr	r0, [r5, #88]	@ 0x58
20001096:	f7ff fef6 	bl	20000e86 <__retarget_lock_acquire_recursive>
2000109a:	89ab      	ldrh	r3, [r5, #12]
2000109c:	071b      	lsls	r3, r3, #28
2000109e:	d501      	bpl.n	200010a4 <_vfiprintf_r+0x34>
200010a0:	692b      	ldr	r3, [r5, #16]
200010a2:	b99b      	cbnz	r3, 200010cc <_vfiprintf_r+0x5c>
200010a4:	4629      	mov	r1, r5
200010a6:	4630      	mov	r0, r6
200010a8:	f000 fbdc 	bl	20001864 <__swsetup_r>
200010ac:	b170      	cbz	r0, 200010cc <_vfiprintf_r+0x5c>
200010ae:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
200010b0:	07dc      	lsls	r4, r3, #31
200010b2:	d504      	bpl.n	200010be <_vfiprintf_r+0x4e>
200010b4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
200010b8:	b01d      	add	sp, #116	@ 0x74
200010ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
200010be:	89ab      	ldrh	r3, [r5, #12]
200010c0:	0598      	lsls	r0, r3, #22
200010c2:	d4f7      	bmi.n	200010b4 <_vfiprintf_r+0x44>
200010c4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
200010c6:	f7ff fee4 	bl	20000e92 <__retarget_lock_release_recursive>
200010ca:	e7f3      	b.n	200010b4 <_vfiprintf_r+0x44>
200010cc:	2300      	movs	r3, #0
200010ce:	9309      	str	r3, [sp, #36]	@ 0x24
200010d0:	2320      	movs	r3, #32
200010d2:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
200010d6:	f8cd 800c 	str.w	r8, [sp, #12]
200010da:	2330      	movs	r3, #48	@ 0x30
200010dc:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 2000128c <_vfiprintf_r+0x21c>
200010e0:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
200010e4:	f04f 0901 	mov.w	r9, #1
200010e8:	4623      	mov	r3, r4
200010ea:	469a      	mov	sl, r3
200010ec:	f813 2b01 	ldrb.w	r2, [r3], #1
200010f0:	b10a      	cbz	r2, 200010f6 <_vfiprintf_r+0x86>
200010f2:	2a25      	cmp	r2, #37	@ 0x25
200010f4:	d1f9      	bne.n	200010ea <_vfiprintf_r+0x7a>
200010f6:	ebba 0b04 	subs.w	fp, sl, r4
200010fa:	d00b      	beq.n	20001114 <_vfiprintf_r+0xa4>
200010fc:	465b      	mov	r3, fp
200010fe:	4622      	mov	r2, r4
20001100:	4629      	mov	r1, r5
20001102:	4630      	mov	r0, r6
20001104:	f7ff ff95 	bl	20001032 <__sfputs_r>
20001108:	3001      	adds	r0, #1
2000110a:	f000 80a7 	beq.w	2000125c <_vfiprintf_r+0x1ec>
2000110e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
20001110:	445a      	add	r2, fp
20001112:	9209      	str	r2, [sp, #36]	@ 0x24
20001114:	f89a 3000 	ldrb.w	r3, [sl]
20001118:	2b00      	cmp	r3, #0
2000111a:	f000 809f 	beq.w	2000125c <_vfiprintf_r+0x1ec>
2000111e:	2300      	movs	r3, #0
20001120:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
20001124:	e9cd 2305 	strd	r2, r3, [sp, #20]
20001128:	f10a 0a01 	add.w	sl, sl, #1
2000112c:	9304      	str	r3, [sp, #16]
2000112e:	9307      	str	r3, [sp, #28]
20001130:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
20001134:	931a      	str	r3, [sp, #104]	@ 0x68
20001136:	4654      	mov	r4, sl
20001138:	2205      	movs	r2, #5
2000113a:	f814 1b01 	ldrb.w	r1, [r4], #1
2000113e:	4853      	ldr	r0, [pc, #332]	@ (2000128c <_vfiprintf_r+0x21c>)
20001140:	f000 fda6 	bl	20001c90 <memchr>
20001144:	9a04      	ldr	r2, [sp, #16]
20001146:	b9d8      	cbnz	r0, 20001180 <_vfiprintf_r+0x110>
20001148:	06d1      	lsls	r1, r2, #27
2000114a:	bf44      	itt	mi
2000114c:	2320      	movmi	r3, #32
2000114e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
20001152:	0713      	lsls	r3, r2, #28
20001154:	bf44      	itt	mi
20001156:	232b      	movmi	r3, #43	@ 0x2b
20001158:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
2000115c:	f89a 3000 	ldrb.w	r3, [sl]
20001160:	2b2a      	cmp	r3, #42	@ 0x2a
20001162:	d015      	beq.n	20001190 <_vfiprintf_r+0x120>
20001164:	9a07      	ldr	r2, [sp, #28]
20001166:	4654      	mov	r4, sl
20001168:	2000      	movs	r0, #0
2000116a:	f04f 0c0a 	mov.w	ip, #10
2000116e:	4621      	mov	r1, r4
20001170:	f811 3b01 	ldrb.w	r3, [r1], #1
20001174:	3b30      	subs	r3, #48	@ 0x30
20001176:	2b09      	cmp	r3, #9
20001178:	d94b      	bls.n	20001212 <_vfiprintf_r+0x1a2>
2000117a:	b1b0      	cbz	r0, 200011aa <_vfiprintf_r+0x13a>
2000117c:	9207      	str	r2, [sp, #28]
2000117e:	e014      	b.n	200011aa <_vfiprintf_r+0x13a>
20001180:	eba0 0308 	sub.w	r3, r0, r8
20001184:	fa09 f303 	lsl.w	r3, r9, r3
20001188:	4313      	orrs	r3, r2
2000118a:	9304      	str	r3, [sp, #16]
2000118c:	46a2      	mov	sl, r4
2000118e:	e7d2      	b.n	20001136 <_vfiprintf_r+0xc6>
20001190:	9b03      	ldr	r3, [sp, #12]
20001192:	1d19      	adds	r1, r3, #4
20001194:	681b      	ldr	r3, [r3, #0]
20001196:	9103      	str	r1, [sp, #12]
20001198:	2b00      	cmp	r3, #0
2000119a:	bfbb      	ittet	lt
2000119c:	425b      	neglt	r3, r3
2000119e:	f042 0202 	orrlt.w	r2, r2, #2
200011a2:	9307      	strge	r3, [sp, #28]
200011a4:	9307      	strlt	r3, [sp, #28]
200011a6:	bfb8      	it	lt
200011a8:	9204      	strlt	r2, [sp, #16]
200011aa:	7823      	ldrb	r3, [r4, #0]
200011ac:	2b2e      	cmp	r3, #46	@ 0x2e
200011ae:	d10a      	bne.n	200011c6 <_vfiprintf_r+0x156>
200011b0:	7863      	ldrb	r3, [r4, #1]
200011b2:	2b2a      	cmp	r3, #42	@ 0x2a
200011b4:	d132      	bne.n	2000121c <_vfiprintf_r+0x1ac>
200011b6:	9b03      	ldr	r3, [sp, #12]
200011b8:	1d1a      	adds	r2, r3, #4
200011ba:	681b      	ldr	r3, [r3, #0]
200011bc:	9203      	str	r2, [sp, #12]
200011be:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
200011c2:	3402      	adds	r4, #2
200011c4:	9305      	str	r3, [sp, #20]
200011c6:	f8df a0c8 	ldr.w	sl, [pc, #200]	@ 20001290 <_vfiprintf_r+0x220>
200011ca:	7821      	ldrb	r1, [r4, #0]
200011cc:	2203      	movs	r2, #3
200011ce:	4650      	mov	r0, sl
200011d0:	f000 fd5e 	bl	20001c90 <memchr>
200011d4:	b138      	cbz	r0, 200011e6 <_vfiprintf_r+0x176>
200011d6:	9b04      	ldr	r3, [sp, #16]
200011d8:	eba0 000a 	sub.w	r0, r0, sl
200011dc:	2240      	movs	r2, #64	@ 0x40
200011de:	4082      	lsls	r2, r0
200011e0:	4313      	orrs	r3, r2
200011e2:	3401      	adds	r4, #1
200011e4:	9304      	str	r3, [sp, #16]
200011e6:	f814 1b01 	ldrb.w	r1, [r4], #1
200011ea:	482a      	ldr	r0, [pc, #168]	@ (20001294 <_vfiprintf_r+0x224>)
200011ec:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
200011f0:	2206      	movs	r2, #6
200011f2:	f000 fd4d 	bl	20001c90 <memchr>
200011f6:	2800      	cmp	r0, #0
200011f8:	d03f      	beq.n	2000127a <_vfiprintf_r+0x20a>
200011fa:	4b27      	ldr	r3, [pc, #156]	@ (20001298 <_vfiprintf_r+0x228>)
200011fc:	bb1b      	cbnz	r3, 20001246 <_vfiprintf_r+0x1d6>
200011fe:	9b03      	ldr	r3, [sp, #12]
20001200:	3307      	adds	r3, #7
20001202:	f023 0307 	bic.w	r3, r3, #7
20001206:	3308      	adds	r3, #8
20001208:	9303      	str	r3, [sp, #12]
2000120a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
2000120c:	443b      	add	r3, r7
2000120e:	9309      	str	r3, [sp, #36]	@ 0x24
20001210:	e76a      	b.n	200010e8 <_vfiprintf_r+0x78>
20001212:	fb0c 3202 	mla	r2, ip, r2, r3
20001216:	460c      	mov	r4, r1
20001218:	2001      	movs	r0, #1
2000121a:	e7a8      	b.n	2000116e <_vfiprintf_r+0xfe>
2000121c:	2300      	movs	r3, #0
2000121e:	3401      	adds	r4, #1
20001220:	9305      	str	r3, [sp, #20]
20001222:	4619      	mov	r1, r3
20001224:	f04f 0c0a 	mov.w	ip, #10
20001228:	4620      	mov	r0, r4
2000122a:	f810 2b01 	ldrb.w	r2, [r0], #1
2000122e:	3a30      	subs	r2, #48	@ 0x30
20001230:	2a09      	cmp	r2, #9
20001232:	d903      	bls.n	2000123c <_vfiprintf_r+0x1cc>
20001234:	2b00      	cmp	r3, #0
20001236:	d0c6      	beq.n	200011c6 <_vfiprintf_r+0x156>
20001238:	9105      	str	r1, [sp, #20]
2000123a:	e7c4      	b.n	200011c6 <_vfiprintf_r+0x156>
2000123c:	fb0c 2101 	mla	r1, ip, r1, r2
20001240:	4604      	mov	r4, r0
20001242:	2301      	movs	r3, #1
20001244:	e7f0      	b.n	20001228 <_vfiprintf_r+0x1b8>
20001246:	ab03      	add	r3, sp, #12
20001248:	9300      	str	r3, [sp, #0]
2000124a:	462a      	mov	r2, r5
2000124c:	4b13      	ldr	r3, [pc, #76]	@ (2000129c <_vfiprintf_r+0x22c>)
2000124e:	a904      	add	r1, sp, #16
20001250:	4630      	mov	r0, r6
20001252:	f3af 8000 	nop.w
20001256:	4607      	mov	r7, r0
20001258:	1c78      	adds	r0, r7, #1
2000125a:	d1d6      	bne.n	2000120a <_vfiprintf_r+0x19a>
2000125c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
2000125e:	07d9      	lsls	r1, r3, #31
20001260:	d405      	bmi.n	2000126e <_vfiprintf_r+0x1fe>
20001262:	89ab      	ldrh	r3, [r5, #12]
20001264:	059a      	lsls	r2, r3, #22
20001266:	d402      	bmi.n	2000126e <_vfiprintf_r+0x1fe>
20001268:	6da8      	ldr	r0, [r5, #88]	@ 0x58
2000126a:	f7ff fe12 	bl	20000e92 <__retarget_lock_release_recursive>
2000126e:	89ab      	ldrh	r3, [r5, #12]
20001270:	065b      	lsls	r3, r3, #25
20001272:	f53f af1f 	bmi.w	200010b4 <_vfiprintf_r+0x44>
20001276:	9809      	ldr	r0, [sp, #36]	@ 0x24
20001278:	e71e      	b.n	200010b8 <_vfiprintf_r+0x48>
2000127a:	ab03      	add	r3, sp, #12
2000127c:	9300      	str	r3, [sp, #0]
2000127e:	462a      	mov	r2, r5
20001280:	4b06      	ldr	r3, [pc, #24]	@ (2000129c <_vfiprintf_r+0x22c>)
20001282:	a904      	add	r1, sp, #16
20001284:	4630      	mov	r0, r6
20001286:	f000 f935 	bl	200014f4 <_printf_i>
2000128a:	e7e4      	b.n	20001256 <_vfiprintf_r+0x1e6>
2000128c:	20001e4d 	.word	0x20001e4d
20001290:	20001e53 	.word	0x20001e53
20001294:	20001e57 	.word	0x20001e57
20001298:	00000000 	.word	0x00000000
2000129c:	20001033 	.word	0x20001033

200012a0 <vfiprintf>:
200012a0:	4613      	mov	r3, r2
200012a2:	460a      	mov	r2, r1
200012a4:	4601      	mov	r1, r0
200012a6:	4802      	ldr	r0, [pc, #8]	@ (200012b0 <vfiprintf+0x10>)
200012a8:	6800      	ldr	r0, [r0, #0]
200012aa:	f7ff bee1 	b.w	20001070 <_vfiprintf_r>
200012ae:	bf00      	nop
200012b0:	20001dc8 	.word	0x20001dc8

200012b4 <malloc>:
200012b4:	4b02      	ldr	r3, [pc, #8]	@ (200012c0 <malloc+0xc>)
200012b6:	4601      	mov	r1, r0
200012b8:	6818      	ldr	r0, [r3, #0]
200012ba:	f000 b82d 	b.w	20001318 <_malloc_r>
200012be:	bf00      	nop
200012c0:	20001dc8 	.word	0x20001dc8

200012c4 <free>:
200012c4:	4b02      	ldr	r3, [pc, #8]	@ (200012d0 <free+0xc>)
200012c6:	4601      	mov	r1, r0
200012c8:	6818      	ldr	r0, [r3, #0]
200012ca:	f7ff be53 	b.w	20000f74 <_free_r>
200012ce:	bf00      	nop
200012d0:	20001dc8 	.word	0x20001dc8

200012d4 <sbrk_aligned>:
200012d4:	b570      	push	{r4, r5, r6, lr}
200012d6:	4e0f      	ldr	r6, [pc, #60]	@ (20001314 <sbrk_aligned+0x40>)
200012d8:	460c      	mov	r4, r1
200012da:	6831      	ldr	r1, [r6, #0]
200012dc:	4605      	mov	r5, r0
200012de:	b911      	cbnz	r1, 200012e6 <sbrk_aligned+0x12>
200012e0:	f000 fca4 	bl	20001c2c <_sbrk_r>
200012e4:	6030      	str	r0, [r6, #0]
200012e6:	4621      	mov	r1, r4
200012e8:	4628      	mov	r0, r5
200012ea:	f000 fc9f 	bl	20001c2c <_sbrk_r>
200012ee:	1c43      	adds	r3, r0, #1
200012f0:	d103      	bne.n	200012fa <sbrk_aligned+0x26>
200012f2:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
200012f6:	4620      	mov	r0, r4
200012f8:	bd70      	pop	{r4, r5, r6, pc}
200012fa:	1cc4      	adds	r4, r0, #3
200012fc:	f024 0403 	bic.w	r4, r4, #3
20001300:	42a0      	cmp	r0, r4
20001302:	d0f8      	beq.n	200012f6 <sbrk_aligned+0x22>
20001304:	1a21      	subs	r1, r4, r0
20001306:	4628      	mov	r0, r5
20001308:	f000 fc90 	bl	20001c2c <_sbrk_r>
2000130c:	3001      	adds	r0, #1
2000130e:	d1f2      	bne.n	200012f6 <sbrk_aligned+0x22>
20001310:	e7ef      	b.n	200012f2 <sbrk_aligned+0x1e>
20001312:	bf00      	nop
20001314:	20001fcc 	.word	0x20001fcc

20001318 <_malloc_r>:
20001318:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
2000131c:	1ccd      	adds	r5, r1, #3
2000131e:	f025 0503 	bic.w	r5, r5, #3
20001322:	3508      	adds	r5, #8
20001324:	2d0c      	cmp	r5, #12
20001326:	bf38      	it	cc
20001328:	250c      	movcc	r5, #12
2000132a:	2d00      	cmp	r5, #0
2000132c:	4606      	mov	r6, r0
2000132e:	db01      	blt.n	20001334 <_malloc_r+0x1c>
20001330:	42a9      	cmp	r1, r5
20001332:	d904      	bls.n	2000133e <_malloc_r+0x26>
20001334:	230c      	movs	r3, #12
20001336:	6033      	str	r3, [r6, #0]
20001338:	2000      	movs	r0, #0
2000133a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
2000133e:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 20001414 <_malloc_r+0xfc>
20001342:	f000 f9f7 	bl	20001734 <__malloc_lock>
20001346:	f8d8 3000 	ldr.w	r3, [r8]
2000134a:	461c      	mov	r4, r3
2000134c:	bb44      	cbnz	r4, 200013a0 <_malloc_r+0x88>
2000134e:	4629      	mov	r1, r5
20001350:	4630      	mov	r0, r6
20001352:	f7ff ffbf 	bl	200012d4 <sbrk_aligned>
20001356:	1c43      	adds	r3, r0, #1
20001358:	4604      	mov	r4, r0
2000135a:	d158      	bne.n	2000140e <_malloc_r+0xf6>
2000135c:	f8d8 4000 	ldr.w	r4, [r8]
20001360:	4627      	mov	r7, r4
20001362:	2f00      	cmp	r7, #0
20001364:	d143      	bne.n	200013ee <_malloc_r+0xd6>
20001366:	2c00      	cmp	r4, #0
20001368:	d04b      	beq.n	20001402 <_malloc_r+0xea>
2000136a:	6823      	ldr	r3, [r4, #0]
2000136c:	4639      	mov	r1, r7
2000136e:	4630      	mov	r0, r6
20001370:	eb04 0903 	add.w	r9, r4, r3
20001374:	f000 fc5a 	bl	20001c2c <_sbrk_r>
20001378:	4581      	cmp	r9, r0
2000137a:	d142      	bne.n	20001402 <_malloc_r+0xea>
2000137c:	6821      	ldr	r1, [r4, #0]
2000137e:	1a6d      	subs	r5, r5, r1
20001380:	4629      	mov	r1, r5
20001382:	4630      	mov	r0, r6
20001384:	f7ff ffa6 	bl	200012d4 <sbrk_aligned>
20001388:	3001      	adds	r0, #1
2000138a:	d03a      	beq.n	20001402 <_malloc_r+0xea>
2000138c:	6823      	ldr	r3, [r4, #0]
2000138e:	442b      	add	r3, r5
20001390:	6023      	str	r3, [r4, #0]
20001392:	f8d8 3000 	ldr.w	r3, [r8]
20001396:	685a      	ldr	r2, [r3, #4]
20001398:	bb62      	cbnz	r2, 200013f4 <_malloc_r+0xdc>
2000139a:	f8c8 7000 	str.w	r7, [r8]
2000139e:	e00f      	b.n	200013c0 <_malloc_r+0xa8>
200013a0:	6822      	ldr	r2, [r4, #0]
200013a2:	1b52      	subs	r2, r2, r5
200013a4:	d420      	bmi.n	200013e8 <_malloc_r+0xd0>
200013a6:	2a0b      	cmp	r2, #11
200013a8:	d917      	bls.n	200013da <_malloc_r+0xc2>
200013aa:	1961      	adds	r1, r4, r5
200013ac:	42a3      	cmp	r3, r4
200013ae:	6025      	str	r5, [r4, #0]
200013b0:	bf18      	it	ne
200013b2:	6059      	strne	r1, [r3, #4]
200013b4:	6863      	ldr	r3, [r4, #4]
200013b6:	bf08      	it	eq
200013b8:	f8c8 1000 	streq.w	r1, [r8]
200013bc:	5162      	str	r2, [r4, r5]
200013be:	604b      	str	r3, [r1, #4]
200013c0:	4630      	mov	r0, r6
200013c2:	f000 f9bd 	bl	20001740 <__malloc_unlock>
200013c6:	f104 000b 	add.w	r0, r4, #11
200013ca:	1d23      	adds	r3, r4, #4
200013cc:	f020 0007 	bic.w	r0, r0, #7
200013d0:	1ac2      	subs	r2, r0, r3
200013d2:	bf1c      	itt	ne
200013d4:	1a1b      	subne	r3, r3, r0
200013d6:	50a3      	strne	r3, [r4, r2]
200013d8:	e7af      	b.n	2000133a <_malloc_r+0x22>
200013da:	6862      	ldr	r2, [r4, #4]
200013dc:	42a3      	cmp	r3, r4
200013de:	bf0c      	ite	eq
200013e0:	f8c8 2000 	streq.w	r2, [r8]
200013e4:	605a      	strne	r2, [r3, #4]
200013e6:	e7eb      	b.n	200013c0 <_malloc_r+0xa8>
200013e8:	4623      	mov	r3, r4
200013ea:	6864      	ldr	r4, [r4, #4]
200013ec:	e7ae      	b.n	2000134c <_malloc_r+0x34>
200013ee:	463c      	mov	r4, r7
200013f0:	687f      	ldr	r7, [r7, #4]
200013f2:	e7b6      	b.n	20001362 <_malloc_r+0x4a>
200013f4:	461a      	mov	r2, r3
200013f6:	685b      	ldr	r3, [r3, #4]
200013f8:	42a3      	cmp	r3, r4
200013fa:	d1fb      	bne.n	200013f4 <_malloc_r+0xdc>
200013fc:	2300      	movs	r3, #0
200013fe:	6053      	str	r3, [r2, #4]
20001400:	e7de      	b.n	200013c0 <_malloc_r+0xa8>
20001402:	230c      	movs	r3, #12
20001404:	6033      	str	r3, [r6, #0]
20001406:	4630      	mov	r0, r6
20001408:	f000 f99a 	bl	20001740 <__malloc_unlock>
2000140c:	e794      	b.n	20001338 <_malloc_r+0x20>
2000140e:	6005      	str	r5, [r0, #0]
20001410:	e7d6      	b.n	200013c0 <_malloc_r+0xa8>
20001412:	bf00      	nop
20001414:	20001fd0 	.word	0x20001fd0

20001418 <_printf_common>:
20001418:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2000141c:	4616      	mov	r6, r2
2000141e:	4698      	mov	r8, r3
20001420:	688a      	ldr	r2, [r1, #8]
20001422:	690b      	ldr	r3, [r1, #16]
20001424:	f8dd 9020 	ldr.w	r9, [sp, #32]
20001428:	4293      	cmp	r3, r2
2000142a:	bfb8      	it	lt
2000142c:	4613      	movlt	r3, r2
2000142e:	6033      	str	r3, [r6, #0]
20001430:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
20001434:	4607      	mov	r7, r0
20001436:	460c      	mov	r4, r1
20001438:	b10a      	cbz	r2, 2000143e <_printf_common+0x26>
2000143a:	3301      	adds	r3, #1
2000143c:	6033      	str	r3, [r6, #0]
2000143e:	6823      	ldr	r3, [r4, #0]
20001440:	0699      	lsls	r1, r3, #26
20001442:	bf42      	ittt	mi
20001444:	6833      	ldrmi	r3, [r6, #0]
20001446:	3302      	addmi	r3, #2
20001448:	6033      	strmi	r3, [r6, #0]
2000144a:	6825      	ldr	r5, [r4, #0]
2000144c:	f015 0506 	ands.w	r5, r5, #6
20001450:	d106      	bne.n	20001460 <_printf_common+0x48>
20001452:	f104 0a19 	add.w	sl, r4, #25
20001456:	68e3      	ldr	r3, [r4, #12]
20001458:	6832      	ldr	r2, [r6, #0]
2000145a:	1a9b      	subs	r3, r3, r2
2000145c:	42ab      	cmp	r3, r5
2000145e:	dc26      	bgt.n	200014ae <_printf_common+0x96>
20001460:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
20001464:	6822      	ldr	r2, [r4, #0]
20001466:	3b00      	subs	r3, #0
20001468:	bf18      	it	ne
2000146a:	2301      	movne	r3, #1
2000146c:	0692      	lsls	r2, r2, #26
2000146e:	d42b      	bmi.n	200014c8 <_printf_common+0xb0>
20001470:	f104 0243 	add.w	r2, r4, #67	@ 0x43
20001474:	4641      	mov	r1, r8
20001476:	4638      	mov	r0, r7
20001478:	47c8      	blx	r9
2000147a:	3001      	adds	r0, #1
2000147c:	d01e      	beq.n	200014bc <_printf_common+0xa4>
2000147e:	6823      	ldr	r3, [r4, #0]
20001480:	6922      	ldr	r2, [r4, #16]
20001482:	f003 0306 	and.w	r3, r3, #6
20001486:	2b04      	cmp	r3, #4
20001488:	bf02      	ittt	eq
2000148a:	68e5      	ldreq	r5, [r4, #12]
2000148c:	6833      	ldreq	r3, [r6, #0]
2000148e:	1aed      	subeq	r5, r5, r3
20001490:	68a3      	ldr	r3, [r4, #8]
20001492:	bf0c      	ite	eq
20001494:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
20001498:	2500      	movne	r5, #0
2000149a:	4293      	cmp	r3, r2
2000149c:	bfc4      	itt	gt
2000149e:	1a9b      	subgt	r3, r3, r2
200014a0:	18ed      	addgt	r5, r5, r3
200014a2:	2600      	movs	r6, #0
200014a4:	341a      	adds	r4, #26
200014a6:	42b5      	cmp	r5, r6
200014a8:	d11a      	bne.n	200014e0 <_printf_common+0xc8>
200014aa:	2000      	movs	r0, #0
200014ac:	e008      	b.n	200014c0 <_printf_common+0xa8>
200014ae:	2301      	movs	r3, #1
200014b0:	4652      	mov	r2, sl
200014b2:	4641      	mov	r1, r8
200014b4:	4638      	mov	r0, r7
200014b6:	47c8      	blx	r9
200014b8:	3001      	adds	r0, #1
200014ba:	d103      	bne.n	200014c4 <_printf_common+0xac>
200014bc:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
200014c0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
200014c4:	3501      	adds	r5, #1
200014c6:	e7c6      	b.n	20001456 <_printf_common+0x3e>
200014c8:	18e1      	adds	r1, r4, r3
200014ca:	1c5a      	adds	r2, r3, #1
200014cc:	2030      	movs	r0, #48	@ 0x30
200014ce:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
200014d2:	4422      	add	r2, r4
200014d4:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
200014d8:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
200014dc:	3302      	adds	r3, #2
200014de:	e7c7      	b.n	20001470 <_printf_common+0x58>
200014e0:	2301      	movs	r3, #1
200014e2:	4622      	mov	r2, r4
200014e4:	4641      	mov	r1, r8
200014e6:	4638      	mov	r0, r7
200014e8:	47c8      	blx	r9
200014ea:	3001      	adds	r0, #1
200014ec:	d0e6      	beq.n	200014bc <_printf_common+0xa4>
200014ee:	3601      	adds	r6, #1
200014f0:	e7d9      	b.n	200014a6 <_printf_common+0x8e>
	...

200014f4 <_printf_i>:
200014f4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
200014f8:	7e0f      	ldrb	r7, [r1, #24]
200014fa:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
200014fc:	2f78      	cmp	r7, #120	@ 0x78
200014fe:	4691      	mov	r9, r2
20001500:	4680      	mov	r8, r0
20001502:	460c      	mov	r4, r1
20001504:	469a      	mov	sl, r3
20001506:	f101 0243 	add.w	r2, r1, #67	@ 0x43
2000150a:	d807      	bhi.n	2000151c <_printf_i+0x28>
2000150c:	2f62      	cmp	r7, #98	@ 0x62
2000150e:	d80a      	bhi.n	20001526 <_printf_i+0x32>
20001510:	2f00      	cmp	r7, #0
20001512:	f000 80d2 	beq.w	200016ba <_printf_i+0x1c6>
20001516:	2f58      	cmp	r7, #88	@ 0x58
20001518:	f000 80b7 	beq.w	2000168a <_printf_i+0x196>
2000151c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
20001520:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
20001524:	e03a      	b.n	2000159c <_printf_i+0xa8>
20001526:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
2000152a:	2b15      	cmp	r3, #21
2000152c:	d8f6      	bhi.n	2000151c <_printf_i+0x28>
2000152e:	a101      	add	r1, pc, #4	@ (adr r1, 20001534 <_printf_i+0x40>)
20001530:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
20001534:	2000158d 	.word	0x2000158d
20001538:	200015a1 	.word	0x200015a1
2000153c:	2000151d 	.word	0x2000151d
20001540:	2000151d 	.word	0x2000151d
20001544:	2000151d 	.word	0x2000151d
20001548:	2000151d 	.word	0x2000151d
2000154c:	200015a1 	.word	0x200015a1
20001550:	2000151d 	.word	0x2000151d
20001554:	2000151d 	.word	0x2000151d
20001558:	2000151d 	.word	0x2000151d
2000155c:	2000151d 	.word	0x2000151d
20001560:	200016a1 	.word	0x200016a1
20001564:	200015cb 	.word	0x200015cb
20001568:	20001657 	.word	0x20001657
2000156c:	2000151d 	.word	0x2000151d
20001570:	2000151d 	.word	0x2000151d
20001574:	200016c3 	.word	0x200016c3
20001578:	2000151d 	.word	0x2000151d
2000157c:	200015cb 	.word	0x200015cb
20001580:	2000151d 	.word	0x2000151d
20001584:	2000151d 	.word	0x2000151d
20001588:	2000165f 	.word	0x2000165f
2000158c:	6833      	ldr	r3, [r6, #0]
2000158e:	1d1a      	adds	r2, r3, #4
20001590:	681b      	ldr	r3, [r3, #0]
20001592:	6032      	str	r2, [r6, #0]
20001594:	f104 0642 	add.w	r6, r4, #66	@ 0x42
20001598:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
2000159c:	2301      	movs	r3, #1
2000159e:	e09d      	b.n	200016dc <_printf_i+0x1e8>
200015a0:	6833      	ldr	r3, [r6, #0]
200015a2:	6820      	ldr	r0, [r4, #0]
200015a4:	1d19      	adds	r1, r3, #4
200015a6:	6031      	str	r1, [r6, #0]
200015a8:	0606      	lsls	r6, r0, #24
200015aa:	d501      	bpl.n	200015b0 <_printf_i+0xbc>
200015ac:	681d      	ldr	r5, [r3, #0]
200015ae:	e003      	b.n	200015b8 <_printf_i+0xc4>
200015b0:	0645      	lsls	r5, r0, #25
200015b2:	d5fb      	bpl.n	200015ac <_printf_i+0xb8>
200015b4:	f9b3 5000 	ldrsh.w	r5, [r3]
200015b8:	2d00      	cmp	r5, #0
200015ba:	da03      	bge.n	200015c4 <_printf_i+0xd0>
200015bc:	232d      	movs	r3, #45	@ 0x2d
200015be:	426d      	negs	r5, r5
200015c0:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
200015c4:	4859      	ldr	r0, [pc, #356]	@ (2000172c <_printf_i+0x238>)
200015c6:	230a      	movs	r3, #10
200015c8:	e010      	b.n	200015ec <_printf_i+0xf8>
200015ca:	6821      	ldr	r1, [r4, #0]
200015cc:	6833      	ldr	r3, [r6, #0]
200015ce:	0608      	lsls	r0, r1, #24
200015d0:	f853 5b04 	ldr.w	r5, [r3], #4
200015d4:	d402      	bmi.n	200015dc <_printf_i+0xe8>
200015d6:	0649      	lsls	r1, r1, #25
200015d8:	bf48      	it	mi
200015da:	b2ad      	uxthmi	r5, r5
200015dc:	2f6f      	cmp	r7, #111	@ 0x6f
200015de:	4853      	ldr	r0, [pc, #332]	@ (2000172c <_printf_i+0x238>)
200015e0:	6033      	str	r3, [r6, #0]
200015e2:	d159      	bne.n	20001698 <_printf_i+0x1a4>
200015e4:	2308      	movs	r3, #8
200015e6:	2100      	movs	r1, #0
200015e8:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
200015ec:	6866      	ldr	r6, [r4, #4]
200015ee:	60a6      	str	r6, [r4, #8]
200015f0:	2e00      	cmp	r6, #0
200015f2:	db05      	blt.n	20001600 <_printf_i+0x10c>
200015f4:	6821      	ldr	r1, [r4, #0]
200015f6:	432e      	orrs	r6, r5
200015f8:	f021 0104 	bic.w	r1, r1, #4
200015fc:	6021      	str	r1, [r4, #0]
200015fe:	d04d      	beq.n	2000169c <_printf_i+0x1a8>
20001600:	4616      	mov	r6, r2
20001602:	fbb5 f1f3 	udiv	r1, r5, r3
20001606:	fb03 5711 	mls	r7, r3, r1, r5
2000160a:	5dc7      	ldrb	r7, [r0, r7]
2000160c:	f806 7d01 	strb.w	r7, [r6, #-1]!
20001610:	462f      	mov	r7, r5
20001612:	42bb      	cmp	r3, r7
20001614:	460d      	mov	r5, r1
20001616:	d9f4      	bls.n	20001602 <_printf_i+0x10e>
20001618:	2b08      	cmp	r3, #8
2000161a:	d10b      	bne.n	20001634 <_printf_i+0x140>
2000161c:	6823      	ldr	r3, [r4, #0]
2000161e:	07df      	lsls	r7, r3, #31
20001620:	d508      	bpl.n	20001634 <_printf_i+0x140>
20001622:	6923      	ldr	r3, [r4, #16]
20001624:	6861      	ldr	r1, [r4, #4]
20001626:	4299      	cmp	r1, r3
20001628:	bfde      	ittt	le
2000162a:	2330      	movle	r3, #48	@ 0x30
2000162c:	f806 3c01 	strble.w	r3, [r6, #-1]
20001630:	f106 36ff 	addle.w	r6, r6, #4294967295	@ 0xffffffff
20001634:	1b92      	subs	r2, r2, r6
20001636:	6122      	str	r2, [r4, #16]
20001638:	f8cd a000 	str.w	sl, [sp]
2000163c:	464b      	mov	r3, r9
2000163e:	aa03      	add	r2, sp, #12
20001640:	4621      	mov	r1, r4
20001642:	4640      	mov	r0, r8
20001644:	f7ff fee8 	bl	20001418 <_printf_common>
20001648:	3001      	adds	r0, #1
2000164a:	d14c      	bne.n	200016e6 <_printf_i+0x1f2>
2000164c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
20001650:	b004      	add	sp, #16
20001652:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
20001656:	6823      	ldr	r3, [r4, #0]
20001658:	f043 0320 	orr.w	r3, r3, #32
2000165c:	6023      	str	r3, [r4, #0]
2000165e:	4834      	ldr	r0, [pc, #208]	@ (20001730 <_printf_i+0x23c>)
20001660:	2778      	movs	r7, #120	@ 0x78
20001662:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
20001666:	6823      	ldr	r3, [r4, #0]
20001668:	6831      	ldr	r1, [r6, #0]
2000166a:	061f      	lsls	r7, r3, #24
2000166c:	f851 5b04 	ldr.w	r5, [r1], #4
20001670:	d402      	bmi.n	20001678 <_printf_i+0x184>
20001672:	065f      	lsls	r7, r3, #25
20001674:	bf48      	it	mi
20001676:	b2ad      	uxthmi	r5, r5
20001678:	6031      	str	r1, [r6, #0]
2000167a:	07d9      	lsls	r1, r3, #31
2000167c:	bf44      	itt	mi
2000167e:	f043 0320 	orrmi.w	r3, r3, #32
20001682:	6023      	strmi	r3, [r4, #0]
20001684:	b11d      	cbz	r5, 2000168e <_printf_i+0x19a>
20001686:	2310      	movs	r3, #16
20001688:	e7ad      	b.n	200015e6 <_printf_i+0xf2>
2000168a:	4828      	ldr	r0, [pc, #160]	@ (2000172c <_printf_i+0x238>)
2000168c:	e7e9      	b.n	20001662 <_printf_i+0x16e>
2000168e:	6823      	ldr	r3, [r4, #0]
20001690:	f023 0320 	bic.w	r3, r3, #32
20001694:	6023      	str	r3, [r4, #0]
20001696:	e7f6      	b.n	20001686 <_printf_i+0x192>
20001698:	230a      	movs	r3, #10
2000169a:	e7a4      	b.n	200015e6 <_printf_i+0xf2>
2000169c:	4616      	mov	r6, r2
2000169e:	e7bb      	b.n	20001618 <_printf_i+0x124>
200016a0:	6833      	ldr	r3, [r6, #0]
200016a2:	6825      	ldr	r5, [r4, #0]
200016a4:	6961      	ldr	r1, [r4, #20]
200016a6:	1d18      	adds	r0, r3, #4
200016a8:	6030      	str	r0, [r6, #0]
200016aa:	062e      	lsls	r6, r5, #24
200016ac:	681b      	ldr	r3, [r3, #0]
200016ae:	d501      	bpl.n	200016b4 <_printf_i+0x1c0>
200016b0:	6019      	str	r1, [r3, #0]
200016b2:	e002      	b.n	200016ba <_printf_i+0x1c6>
200016b4:	0668      	lsls	r0, r5, #25
200016b6:	d5fb      	bpl.n	200016b0 <_printf_i+0x1bc>
200016b8:	8019      	strh	r1, [r3, #0]
200016ba:	2300      	movs	r3, #0
200016bc:	6123      	str	r3, [r4, #16]
200016be:	4616      	mov	r6, r2
200016c0:	e7ba      	b.n	20001638 <_printf_i+0x144>
200016c2:	6833      	ldr	r3, [r6, #0]
200016c4:	1d1a      	adds	r2, r3, #4
200016c6:	6032      	str	r2, [r6, #0]
200016c8:	681e      	ldr	r6, [r3, #0]
200016ca:	6862      	ldr	r2, [r4, #4]
200016cc:	2100      	movs	r1, #0
200016ce:	4630      	mov	r0, r6
200016d0:	f000 fade 	bl	20001c90 <memchr>
200016d4:	b108      	cbz	r0, 200016da <_printf_i+0x1e6>
200016d6:	1b80      	subs	r0, r0, r6
200016d8:	6060      	str	r0, [r4, #4]
200016da:	6863      	ldr	r3, [r4, #4]
200016dc:	6123      	str	r3, [r4, #16]
200016de:	2300      	movs	r3, #0
200016e0:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
200016e4:	e7a8      	b.n	20001638 <_printf_i+0x144>
200016e6:	6923      	ldr	r3, [r4, #16]
200016e8:	4632      	mov	r2, r6
200016ea:	4649      	mov	r1, r9
200016ec:	4640      	mov	r0, r8
200016ee:	47d0      	blx	sl
200016f0:	3001      	adds	r0, #1
200016f2:	d0ab      	beq.n	2000164c <_printf_i+0x158>
200016f4:	6823      	ldr	r3, [r4, #0]
200016f6:	079b      	lsls	r3, r3, #30
200016f8:	d413      	bmi.n	20001722 <_printf_i+0x22e>
200016fa:	68e0      	ldr	r0, [r4, #12]
200016fc:	9b03      	ldr	r3, [sp, #12]
200016fe:	4298      	cmp	r0, r3
20001700:	bfb8      	it	lt
20001702:	4618      	movlt	r0, r3
20001704:	e7a4      	b.n	20001650 <_printf_i+0x15c>
20001706:	2301      	movs	r3, #1
20001708:	4632      	mov	r2, r6
2000170a:	4649      	mov	r1, r9
2000170c:	4640      	mov	r0, r8
2000170e:	47d0      	blx	sl
20001710:	3001      	adds	r0, #1
20001712:	d09b      	beq.n	2000164c <_printf_i+0x158>
20001714:	3501      	adds	r5, #1
20001716:	68e3      	ldr	r3, [r4, #12]
20001718:	9903      	ldr	r1, [sp, #12]
2000171a:	1a5b      	subs	r3, r3, r1
2000171c:	42ab      	cmp	r3, r5
2000171e:	dcf2      	bgt.n	20001706 <_printf_i+0x212>
20001720:	e7eb      	b.n	200016fa <_printf_i+0x206>
20001722:	2500      	movs	r5, #0
20001724:	f104 0619 	add.w	r6, r4, #25
20001728:	e7f5      	b.n	20001716 <_printf_i+0x222>
2000172a:	bf00      	nop
2000172c:	20001e5e 	.word	0x20001e5e
20001730:	20001e6f 	.word	0x20001e6f

20001734 <__malloc_lock>:
20001734:	4801      	ldr	r0, [pc, #4]	@ (2000173c <__malloc_lock+0x8>)
20001736:	f7ff bba6 	b.w	20000e86 <__retarget_lock_acquire_recursive>
2000173a:	bf00      	nop
2000173c:	20001fc4 	.word	0x20001fc4

20001740 <__malloc_unlock>:
20001740:	4801      	ldr	r0, [pc, #4]	@ (20001748 <__malloc_unlock+0x8>)
20001742:	f7ff bba6 	b.w	20000e92 <__retarget_lock_release_recursive>
20001746:	bf00      	nop
20001748:	20001fc4 	.word	0x20001fc4

2000174c <__sread>:
2000174c:	b510      	push	{r4, lr}
2000174e:	460c      	mov	r4, r1
20001750:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
20001754:	f000 fa58 	bl	20001c08 <_read_r>
20001758:	2800      	cmp	r0, #0
2000175a:	bfab      	itete	ge
2000175c:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
2000175e:	89a3      	ldrhlt	r3, [r4, #12]
20001760:	181b      	addge	r3, r3, r0
20001762:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
20001766:	bfac      	ite	ge
20001768:	6563      	strge	r3, [r4, #84]	@ 0x54
2000176a:	81a3      	strhlt	r3, [r4, #12]
2000176c:	bd10      	pop	{r4, pc}

2000176e <__seofread>:
2000176e:	2000      	movs	r0, #0
20001770:	4770      	bx	lr

20001772 <__swrite>:
20001772:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
20001776:	461f      	mov	r7, r3
20001778:	898b      	ldrh	r3, [r1, #12]
2000177a:	05db      	lsls	r3, r3, #23
2000177c:	4605      	mov	r5, r0
2000177e:	460c      	mov	r4, r1
20001780:	4616      	mov	r6, r2
20001782:	d505      	bpl.n	20001790 <__swrite+0x1e>
20001784:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
20001788:	2302      	movs	r3, #2
2000178a:	2200      	movs	r2, #0
2000178c:	f000 fa2a 	bl	20001be4 <_lseek_r>
20001790:	89a3      	ldrh	r3, [r4, #12]
20001792:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
20001796:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
2000179a:	81a3      	strh	r3, [r4, #12]
2000179c:	4632      	mov	r2, r6
2000179e:	463b      	mov	r3, r7
200017a0:	4628      	mov	r0, r5
200017a2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
200017a6:	f000 ba51 	b.w	20001c4c <_write_r>

200017aa <__sseek>:
200017aa:	b510      	push	{r4, lr}
200017ac:	460c      	mov	r4, r1
200017ae:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
200017b2:	f000 fa17 	bl	20001be4 <_lseek_r>
200017b6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
200017ba:	1c42      	adds	r2, r0, #1
200017bc:	bf0b      	itete	eq
200017be:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
200017c2:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
200017c6:	81a3      	strheq	r3, [r4, #12]
200017c8:	81a3      	strhne	r3, [r4, #12]
200017ca:	bf18      	it	ne
200017cc:	6560      	strne	r0, [r4, #84]	@ 0x54
200017ce:	bd10      	pop	{r4, pc}

200017d0 <__sclose>:
200017d0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
200017d4:	f000 ba4c 	b.w	20001c70 <_close_r>

200017d8 <__swbuf_r>:
200017d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
200017da:	460e      	mov	r6, r1
200017dc:	4614      	mov	r4, r2
200017de:	4605      	mov	r5, r0
200017e0:	b118      	cbz	r0, 200017ea <__swbuf_r+0x12>
200017e2:	6a03      	ldr	r3, [r0, #32]
200017e4:	b90b      	cbnz	r3, 200017ea <__swbuf_r+0x12>
200017e6:	f7ff fa5b 	bl	20000ca0 <__sinit>
200017ea:	69a3      	ldr	r3, [r4, #24]
200017ec:	60a3      	str	r3, [r4, #8]
200017ee:	89a3      	ldrh	r3, [r4, #12]
200017f0:	071a      	lsls	r2, r3, #28
200017f2:	d501      	bpl.n	200017f8 <__swbuf_r+0x20>
200017f4:	6923      	ldr	r3, [r4, #16]
200017f6:	b943      	cbnz	r3, 2000180a <__swbuf_r+0x32>
200017f8:	4621      	mov	r1, r4
200017fa:	4628      	mov	r0, r5
200017fc:	f000 f832 	bl	20001864 <__swsetup_r>
20001800:	b118      	cbz	r0, 2000180a <__swbuf_r+0x32>
20001802:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
20001806:	4638      	mov	r0, r7
20001808:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2000180a:	6823      	ldr	r3, [r4, #0]
2000180c:	6922      	ldr	r2, [r4, #16]
2000180e:	1a98      	subs	r0, r3, r2
20001810:	6963      	ldr	r3, [r4, #20]
20001812:	b2f6      	uxtb	r6, r6
20001814:	4283      	cmp	r3, r0
20001816:	4637      	mov	r7, r6
20001818:	dc05      	bgt.n	20001826 <__swbuf_r+0x4e>
2000181a:	4621      	mov	r1, r4
2000181c:	4628      	mov	r0, r5
2000181e:	f7ff f857 	bl	200008d0 <_fflush_r>
20001822:	2800      	cmp	r0, #0
20001824:	d1ed      	bne.n	20001802 <__swbuf_r+0x2a>
20001826:	68a3      	ldr	r3, [r4, #8]
20001828:	3b01      	subs	r3, #1
2000182a:	60a3      	str	r3, [r4, #8]
2000182c:	6823      	ldr	r3, [r4, #0]
2000182e:	1c5a      	adds	r2, r3, #1
20001830:	6022      	str	r2, [r4, #0]
20001832:	701e      	strb	r6, [r3, #0]
20001834:	6962      	ldr	r2, [r4, #20]
20001836:	1c43      	adds	r3, r0, #1
20001838:	429a      	cmp	r2, r3
2000183a:	d004      	beq.n	20001846 <__swbuf_r+0x6e>
2000183c:	89a3      	ldrh	r3, [r4, #12]
2000183e:	07db      	lsls	r3, r3, #31
20001840:	d5e1      	bpl.n	20001806 <__swbuf_r+0x2e>
20001842:	2e0a      	cmp	r6, #10
20001844:	d1df      	bne.n	20001806 <__swbuf_r+0x2e>
20001846:	4621      	mov	r1, r4
20001848:	4628      	mov	r0, r5
2000184a:	f7ff f841 	bl	200008d0 <_fflush_r>
2000184e:	2800      	cmp	r0, #0
20001850:	d0d9      	beq.n	20001806 <__swbuf_r+0x2e>
20001852:	e7d6      	b.n	20001802 <__swbuf_r+0x2a>

20001854 <__swbuf>:
20001854:	4b02      	ldr	r3, [pc, #8]	@ (20001860 <__swbuf+0xc>)
20001856:	460a      	mov	r2, r1
20001858:	4601      	mov	r1, r0
2000185a:	6818      	ldr	r0, [r3, #0]
2000185c:	f7ff bfbc 	b.w	200017d8 <__swbuf_r>
20001860:	20001dc8 	.word	0x20001dc8

20001864 <__swsetup_r>:
20001864:	b538      	push	{r3, r4, r5, lr}
20001866:	4b28      	ldr	r3, [pc, #160]	@ (20001908 <__swsetup_r+0xa4>)
20001868:	4605      	mov	r5, r0
2000186a:	6818      	ldr	r0, [r3, #0]
2000186c:	460c      	mov	r4, r1
2000186e:	b118      	cbz	r0, 20001878 <__swsetup_r+0x14>
20001870:	6a03      	ldr	r3, [r0, #32]
20001872:	b90b      	cbnz	r3, 20001878 <__swsetup_r+0x14>
20001874:	f7ff fa14 	bl	20000ca0 <__sinit>
20001878:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
2000187c:	071a      	lsls	r2, r3, #28
2000187e:	d421      	bmi.n	200018c4 <__swsetup_r+0x60>
20001880:	06d8      	lsls	r0, r3, #27
20001882:	d407      	bmi.n	20001894 <__swsetup_r+0x30>
20001884:	2209      	movs	r2, #9
20001886:	602a      	str	r2, [r5, #0]
20001888:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
2000188c:	81a3      	strh	r3, [r4, #12]
2000188e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
20001892:	e030      	b.n	200018f6 <__swsetup_r+0x92>
20001894:	0759      	lsls	r1, r3, #29
20001896:	d512      	bpl.n	200018be <__swsetup_r+0x5a>
20001898:	6b61      	ldr	r1, [r4, #52]	@ 0x34
2000189a:	b141      	cbz	r1, 200018ae <__swsetup_r+0x4a>
2000189c:	f104 0344 	add.w	r3, r4, #68	@ 0x44
200018a0:	4299      	cmp	r1, r3
200018a2:	d002      	beq.n	200018aa <__swsetup_r+0x46>
200018a4:	4628      	mov	r0, r5
200018a6:	f7ff fb65 	bl	20000f74 <_free_r>
200018aa:	2300      	movs	r3, #0
200018ac:	6363      	str	r3, [r4, #52]	@ 0x34
200018ae:	2200      	movs	r2, #0
200018b0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
200018b4:	6062      	str	r2, [r4, #4]
200018b6:	6922      	ldr	r2, [r4, #16]
200018b8:	6022      	str	r2, [r4, #0]
200018ba:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
200018be:	f043 0308 	orr.w	r3, r3, #8
200018c2:	81a3      	strh	r3, [r4, #12]
200018c4:	6922      	ldr	r2, [r4, #16]
200018c6:	b93a      	cbnz	r2, 200018d8 <__swsetup_r+0x74>
200018c8:	059a      	lsls	r2, r3, #22
200018ca:	d501      	bpl.n	200018d0 <__swsetup_r+0x6c>
200018cc:	0618      	lsls	r0, r3, #24
200018ce:	d503      	bpl.n	200018d8 <__swsetup_r+0x74>
200018d0:	4621      	mov	r1, r4
200018d2:	4628      	mov	r0, r5
200018d4:	f7ff fa5a 	bl	20000d8c <__smakebuf_r>
200018d8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
200018dc:	f013 0201 	ands.w	r2, r3, #1
200018e0:	d00a      	beq.n	200018f8 <__swsetup_r+0x94>
200018e2:	2200      	movs	r2, #0
200018e4:	60a2      	str	r2, [r4, #8]
200018e6:	6962      	ldr	r2, [r4, #20]
200018e8:	4252      	negs	r2, r2
200018ea:	61a2      	str	r2, [r4, #24]
200018ec:	6922      	ldr	r2, [r4, #16]
200018ee:	b942      	cbnz	r2, 20001902 <__swsetup_r+0x9e>
200018f0:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
200018f4:	d1c8      	bne.n	20001888 <__swsetup_r+0x24>
200018f6:	bd38      	pop	{r3, r4, r5, pc}
200018f8:	0799      	lsls	r1, r3, #30
200018fa:	bf58      	it	pl
200018fc:	6962      	ldrpl	r2, [r4, #20]
200018fe:	60a2      	str	r2, [r4, #8]
20001900:	e7f4      	b.n	200018ec <__swsetup_r+0x88>
20001902:	2000      	movs	r0, #0
20001904:	e7f7      	b.n	200018f6 <__swsetup_r+0x92>
20001906:	bf00      	nop
20001908:	20001dc8 	.word	0x20001dc8

2000190c <__sfvwrite_r>:
2000190c:	6893      	ldr	r3, [r2, #8]
2000190e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
20001912:	4606      	mov	r6, r0
20001914:	460c      	mov	r4, r1
20001916:	4691      	mov	r9, r2
20001918:	b91b      	cbnz	r3, 20001922 <__sfvwrite_r+0x16>
2000191a:	2000      	movs	r0, #0
2000191c:	b003      	add	sp, #12
2000191e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
20001922:	898b      	ldrh	r3, [r1, #12]
20001924:	071b      	lsls	r3, r3, #28
20001926:	d551      	bpl.n	200019cc <__sfvwrite_r+0xc0>
20001928:	690b      	ldr	r3, [r1, #16]
2000192a:	2b00      	cmp	r3, #0
2000192c:	d04e      	beq.n	200019cc <__sfvwrite_r+0xc0>
2000192e:	f9b4 a00c 	ldrsh.w	sl, [r4, #12]
20001932:	f8d9 8000 	ldr.w	r8, [r9]
20001936:	f01a 0702 	ands.w	r7, sl, #2
2000193a:	d16c      	bne.n	20001a16 <__sfvwrite_r+0x10a>
2000193c:	f01a 0a01 	ands.w	sl, sl, #1
20001940:	f000 8098 	beq.w	20001a74 <__sfvwrite_r+0x168>
20001944:	4638      	mov	r0, r7
20001946:	46ba      	mov	sl, r7
20001948:	46bb      	mov	fp, r7
2000194a:	f1bb 0f00 	cmp.w	fp, #0
2000194e:	f000 810a 	beq.w	20001b66 <__sfvwrite_r+0x25a>
20001952:	b950      	cbnz	r0, 2000196a <__sfvwrite_r+0x5e>
20001954:	465a      	mov	r2, fp
20001956:	210a      	movs	r1, #10
20001958:	4650      	mov	r0, sl
2000195a:	f000 f999 	bl	20001c90 <memchr>
2000195e:	2800      	cmp	r0, #0
20001960:	f000 8107 	beq.w	20001b72 <__sfvwrite_r+0x266>
20001964:	3001      	adds	r0, #1
20001966:	eba0 070a 	sub.w	r7, r0, sl
2000196a:	6820      	ldr	r0, [r4, #0]
2000196c:	6921      	ldr	r1, [r4, #16]
2000196e:	6963      	ldr	r3, [r4, #20]
20001970:	455f      	cmp	r7, fp
20001972:	463a      	mov	r2, r7
20001974:	bf28      	it	cs
20001976:	465a      	movcs	r2, fp
20001978:	4288      	cmp	r0, r1
2000197a:	f240 80fd 	bls.w	20001b78 <__sfvwrite_r+0x26c>
2000197e:	68a5      	ldr	r5, [r4, #8]
20001980:	441d      	add	r5, r3
20001982:	42aa      	cmp	r2, r5
20001984:	f340 80f8 	ble.w	20001b78 <__sfvwrite_r+0x26c>
20001988:	4651      	mov	r1, sl
2000198a:	462a      	mov	r2, r5
2000198c:	f000 f910 	bl	20001bb0 <memmove>
20001990:	6823      	ldr	r3, [r4, #0]
20001992:	442b      	add	r3, r5
20001994:	6023      	str	r3, [r4, #0]
20001996:	4621      	mov	r1, r4
20001998:	4630      	mov	r0, r6
2000199a:	f7fe ff99 	bl	200008d0 <_fflush_r>
2000199e:	2800      	cmp	r0, #0
200019a0:	f040 8088 	bne.w	20001ab4 <__sfvwrite_r+0x1a8>
200019a4:	1b7f      	subs	r7, r7, r5
200019a6:	f040 80ff 	bne.w	20001ba8 <__sfvwrite_r+0x29c>
200019aa:	4621      	mov	r1, r4
200019ac:	4630      	mov	r0, r6
200019ae:	f7fe ff8f 	bl	200008d0 <_fflush_r>
200019b2:	2800      	cmp	r0, #0
200019b4:	d17e      	bne.n	20001ab4 <__sfvwrite_r+0x1a8>
200019b6:	f8d9 3008 	ldr.w	r3, [r9, #8]
200019ba:	1b5b      	subs	r3, r3, r5
200019bc:	44aa      	add	sl, r5
200019be:	ebab 0b05 	sub.w	fp, fp, r5
200019c2:	f8c9 3008 	str.w	r3, [r9, #8]
200019c6:	2b00      	cmp	r3, #0
200019c8:	d1bf      	bne.n	2000194a <__sfvwrite_r+0x3e>
200019ca:	e7a6      	b.n	2000191a <__sfvwrite_r+0xe>
200019cc:	4621      	mov	r1, r4
200019ce:	4630      	mov	r0, r6
200019d0:	f7ff ff48 	bl	20001864 <__swsetup_r>
200019d4:	2800      	cmp	r0, #0
200019d6:	d0aa      	beq.n	2000192e <__sfvwrite_r+0x22>
200019d8:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
200019dc:	e79e      	b.n	2000191c <__sfvwrite_r+0x10>
200019de:	e9d8 5700 	ldrd	r5, r7, [r8]
200019e2:	f108 0808 	add.w	r8, r8, #8
200019e6:	2f00      	cmp	r7, #0
200019e8:	d0f9      	beq.n	200019de <__sfvwrite_r+0xd2>
200019ea:	4557      	cmp	r7, sl
200019ec:	463b      	mov	r3, r7
200019ee:	6a21      	ldr	r1, [r4, #32]
200019f0:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
200019f4:	bf28      	it	cs
200019f6:	4653      	movcs	r3, sl
200019f8:	462a      	mov	r2, r5
200019fa:	4630      	mov	r0, r6
200019fc:	47e0      	blx	ip
200019fe:	2800      	cmp	r0, #0
20001a00:	dd58      	ble.n	20001ab4 <__sfvwrite_r+0x1a8>
20001a02:	f8d9 3008 	ldr.w	r3, [r9, #8]
20001a06:	1a1b      	subs	r3, r3, r0
20001a08:	4405      	add	r5, r0
20001a0a:	1a3f      	subs	r7, r7, r0
20001a0c:	f8c9 3008 	str.w	r3, [r9, #8]
20001a10:	2b00      	cmp	r3, #0
20001a12:	d1e8      	bne.n	200019e6 <__sfvwrite_r+0xda>
20001a14:	e781      	b.n	2000191a <__sfvwrite_r+0xe>
20001a16:	2500      	movs	r5, #0
20001a18:	f8df a190 	ldr.w	sl, [pc, #400]	@ 20001bac <__sfvwrite_r+0x2a0>
20001a1c:	462f      	mov	r7, r5
20001a1e:	e7e2      	b.n	200019e6 <__sfvwrite_r+0xda>
20001a20:	e9d8 a500 	ldrd	sl, r5, [r8]
20001a24:	f108 0808 	add.w	r8, r8, #8
20001a28:	2d00      	cmp	r5, #0
20001a2a:	d0f9      	beq.n	20001a20 <__sfvwrite_r+0x114>
20001a2c:	f9b4 c00c 	ldrsh.w	ip, [r4, #12]
20001a30:	6820      	ldr	r0, [r4, #0]
20001a32:	68a3      	ldr	r3, [r4, #8]
20001a34:	f41c 7f00 	tst.w	ip, #512	@ 0x200
20001a38:	d067      	beq.n	20001b0a <__sfvwrite_r+0x1fe>
20001a3a:	42ab      	cmp	r3, r5
20001a3c:	469b      	mov	fp, r3
20001a3e:	d91b      	bls.n	20001a78 <__sfvwrite_r+0x16c>
20001a40:	462b      	mov	r3, r5
20001a42:	462f      	mov	r7, r5
20001a44:	46ab      	mov	fp, r5
20001a46:	465a      	mov	r2, fp
20001a48:	6820      	ldr	r0, [r4, #0]
20001a4a:	9301      	str	r3, [sp, #4]
20001a4c:	4651      	mov	r1, sl
20001a4e:	f000 f8af 	bl	20001bb0 <memmove>
20001a52:	68a2      	ldr	r2, [r4, #8]
20001a54:	9b01      	ldr	r3, [sp, #4]
20001a56:	1ad2      	subs	r2, r2, r3
20001a58:	6823      	ldr	r3, [r4, #0]
20001a5a:	60a2      	str	r2, [r4, #8]
20001a5c:	445b      	add	r3, fp
20001a5e:	6023      	str	r3, [r4, #0]
20001a60:	f8d9 3008 	ldr.w	r3, [r9, #8]
20001a64:	1bdb      	subs	r3, r3, r7
20001a66:	44ba      	add	sl, r7
20001a68:	1bed      	subs	r5, r5, r7
20001a6a:	f8c9 3008 	str.w	r3, [r9, #8]
20001a6e:	2b00      	cmp	r3, #0
20001a70:	d1da      	bne.n	20001a28 <__sfvwrite_r+0x11c>
20001a72:	e752      	b.n	2000191a <__sfvwrite_r+0xe>
20001a74:	4655      	mov	r5, sl
20001a76:	e7d7      	b.n	20001a28 <__sfvwrite_r+0x11c>
20001a78:	f41c 6f90 	tst.w	ip, #1152	@ 0x480
20001a7c:	d043      	beq.n	20001b06 <__sfvwrite_r+0x1fa>
20001a7e:	6921      	ldr	r1, [r4, #16]
20001a80:	6967      	ldr	r7, [r4, #20]
20001a82:	eba0 0b01 	sub.w	fp, r0, r1
20001a86:	eb07 0747 	add.w	r7, r7, r7, lsl #1
20001a8a:	eb07 77d7 	add.w	r7, r7, r7, lsr #31
20001a8e:	f10b 0001 	add.w	r0, fp, #1
20001a92:	107f      	asrs	r7, r7, #1
20001a94:	4428      	add	r0, r5
20001a96:	42b8      	cmp	r0, r7
20001a98:	463a      	mov	r2, r7
20001a9a:	bf84      	itt	hi
20001a9c:	4607      	movhi	r7, r0
20001a9e:	463a      	movhi	r2, r7
20001aa0:	f41c 6f80 	tst.w	ip, #1024	@ 0x400
20001aa4:	d020      	beq.n	20001ae8 <__sfvwrite_r+0x1dc>
20001aa6:	4611      	mov	r1, r2
20001aa8:	4630      	mov	r0, r6
20001aaa:	f7ff fc35 	bl	20001318 <_malloc_r>
20001aae:	b930      	cbnz	r0, 20001abe <__sfvwrite_r+0x1b2>
20001ab0:	230c      	movs	r3, #12
20001ab2:	6033      	str	r3, [r6, #0]
20001ab4:	89a3      	ldrh	r3, [r4, #12]
20001ab6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
20001aba:	81a3      	strh	r3, [r4, #12]
20001abc:	e78c      	b.n	200019d8 <__sfvwrite_r+0xcc>
20001abe:	465a      	mov	r2, fp
20001ac0:	6921      	ldr	r1, [r4, #16]
20001ac2:	9001      	str	r0, [sp, #4]
20001ac4:	f000 f934 	bl	20001d30 <memcpy>
20001ac8:	89a2      	ldrh	r2, [r4, #12]
20001aca:	9b01      	ldr	r3, [sp, #4]
20001acc:	f422 6290 	bic.w	r2, r2, #1152	@ 0x480
20001ad0:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
20001ad4:	81a2      	strh	r2, [r4, #12]
20001ad6:	6123      	str	r3, [r4, #16]
20001ad8:	6167      	str	r7, [r4, #20]
20001ada:	445b      	add	r3, fp
20001adc:	eba7 070b 	sub.w	r7, r7, fp
20001ae0:	6023      	str	r3, [r4, #0]
20001ae2:	60a7      	str	r7, [r4, #8]
20001ae4:	462b      	mov	r3, r5
20001ae6:	e7ac      	b.n	20001a42 <__sfvwrite_r+0x136>
20001ae8:	4630      	mov	r0, r6
20001aea:	f000 f92f 	bl	20001d4c <_realloc_r>
20001aee:	4603      	mov	r3, r0
20001af0:	2800      	cmp	r0, #0
20001af2:	d1f0      	bne.n	20001ad6 <__sfvwrite_r+0x1ca>
20001af4:	6921      	ldr	r1, [r4, #16]
20001af6:	4630      	mov	r0, r6
20001af8:	f7ff fa3c 	bl	20000f74 <_free_r>
20001afc:	89a3      	ldrh	r3, [r4, #12]
20001afe:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
20001b02:	81a3      	strh	r3, [r4, #12]
20001b04:	e7d4      	b.n	20001ab0 <__sfvwrite_r+0x1a4>
20001b06:	462f      	mov	r7, r5
20001b08:	e79d      	b.n	20001a46 <__sfvwrite_r+0x13a>
20001b0a:	6922      	ldr	r2, [r4, #16]
20001b0c:	4282      	cmp	r2, r0
20001b0e:	d302      	bcc.n	20001b16 <__sfvwrite_r+0x20a>
20001b10:	6962      	ldr	r2, [r4, #20]
20001b12:	42aa      	cmp	r2, r5
20001b14:	d916      	bls.n	20001b44 <__sfvwrite_r+0x238>
20001b16:	42ab      	cmp	r3, r5
20001b18:	bf28      	it	cs
20001b1a:	462b      	movcs	r3, r5
20001b1c:	461a      	mov	r2, r3
20001b1e:	4651      	mov	r1, sl
20001b20:	461f      	mov	r7, r3
20001b22:	f000 f845 	bl	20001bb0 <memmove>
20001b26:	68a3      	ldr	r3, [r4, #8]
20001b28:	6822      	ldr	r2, [r4, #0]
20001b2a:	1bdb      	subs	r3, r3, r7
20001b2c:	443a      	add	r2, r7
20001b2e:	60a3      	str	r3, [r4, #8]
20001b30:	6022      	str	r2, [r4, #0]
20001b32:	2b00      	cmp	r3, #0
20001b34:	d194      	bne.n	20001a60 <__sfvwrite_r+0x154>
20001b36:	4621      	mov	r1, r4
20001b38:	4630      	mov	r0, r6
20001b3a:	f7fe fec9 	bl	200008d0 <_fflush_r>
20001b3e:	2800      	cmp	r0, #0
20001b40:	d08e      	beq.n	20001a60 <__sfvwrite_r+0x154>
20001b42:	e7b7      	b.n	20001ab4 <__sfvwrite_r+0x1a8>
20001b44:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
20001b48:	42ab      	cmp	r3, r5
20001b4a:	bf28      	it	cs
20001b4c:	462b      	movcs	r3, r5
20001b4e:	6aa7      	ldr	r7, [r4, #40]	@ 0x28
20001b50:	fb93 f3f2 	sdiv	r3, r3, r2
20001b54:	6a21      	ldr	r1, [r4, #32]
20001b56:	4353      	muls	r3, r2
20001b58:	4630      	mov	r0, r6
20001b5a:	4652      	mov	r2, sl
20001b5c:	47b8      	blx	r7
20001b5e:	1e07      	subs	r7, r0, #0
20001b60:	f73f af7e 	bgt.w	20001a60 <__sfvwrite_r+0x154>
20001b64:	e7a6      	b.n	20001ab4 <__sfvwrite_r+0x1a8>
20001b66:	e9d8 ab00 	ldrd	sl, fp, [r8]
20001b6a:	2000      	movs	r0, #0
20001b6c:	f108 0808 	add.w	r8, r8, #8
20001b70:	e6eb      	b.n	2000194a <__sfvwrite_r+0x3e>
20001b72:	f10b 0701 	add.w	r7, fp, #1
20001b76:	e6f8      	b.n	2000196a <__sfvwrite_r+0x5e>
20001b78:	4293      	cmp	r3, r2
20001b7a:	dc08      	bgt.n	20001b8e <__sfvwrite_r+0x282>
20001b7c:	6aa5      	ldr	r5, [r4, #40]	@ 0x28
20001b7e:	6a21      	ldr	r1, [r4, #32]
20001b80:	4652      	mov	r2, sl
20001b82:	4630      	mov	r0, r6
20001b84:	47a8      	blx	r5
20001b86:	1e05      	subs	r5, r0, #0
20001b88:	f73f af0c 	bgt.w	200019a4 <__sfvwrite_r+0x98>
20001b8c:	e792      	b.n	20001ab4 <__sfvwrite_r+0x1a8>
20001b8e:	4651      	mov	r1, sl
20001b90:	9201      	str	r2, [sp, #4]
20001b92:	f000 f80d 	bl	20001bb0 <memmove>
20001b96:	9a01      	ldr	r2, [sp, #4]
20001b98:	68a3      	ldr	r3, [r4, #8]
20001b9a:	1a9b      	subs	r3, r3, r2
20001b9c:	60a3      	str	r3, [r4, #8]
20001b9e:	6823      	ldr	r3, [r4, #0]
20001ba0:	4413      	add	r3, r2
20001ba2:	6023      	str	r3, [r4, #0]
20001ba4:	4615      	mov	r5, r2
20001ba6:	e6fd      	b.n	200019a4 <__sfvwrite_r+0x98>
20001ba8:	2001      	movs	r0, #1
20001baa:	e704      	b.n	200019b6 <__sfvwrite_r+0xaa>
20001bac:	7ffffc00 	.word	0x7ffffc00

20001bb0 <memmove>:
20001bb0:	4288      	cmp	r0, r1
20001bb2:	b510      	push	{r4, lr}
20001bb4:	eb01 0402 	add.w	r4, r1, r2
20001bb8:	d902      	bls.n	20001bc0 <memmove+0x10>
20001bba:	4284      	cmp	r4, r0
20001bbc:	4623      	mov	r3, r4
20001bbe:	d807      	bhi.n	20001bd0 <memmove+0x20>
20001bc0:	1e43      	subs	r3, r0, #1
20001bc2:	42a1      	cmp	r1, r4
20001bc4:	d007      	beq.n	20001bd6 <memmove+0x26>
20001bc6:	f811 2b01 	ldrb.w	r2, [r1], #1
20001bca:	f803 2f01 	strb.w	r2, [r3, #1]!
20001bce:	e7f8      	b.n	20001bc2 <memmove+0x12>
20001bd0:	4402      	add	r2, r0
20001bd2:	4282      	cmp	r2, r0
20001bd4:	d100      	bne.n	20001bd8 <memmove+0x28>
20001bd6:	bd10      	pop	{r4, pc}
20001bd8:	f813 1d01 	ldrb.w	r1, [r3, #-1]!
20001bdc:	f802 1d01 	strb.w	r1, [r2, #-1]!
20001be0:	e7f7      	b.n	20001bd2 <memmove+0x22>
	...

20001be4 <_lseek_r>:
20001be4:	b538      	push	{r3, r4, r5, lr}
20001be6:	4d07      	ldr	r5, [pc, #28]	@ (20001c04 <_lseek_r+0x20>)
20001be8:	4604      	mov	r4, r0
20001bea:	4608      	mov	r0, r1
20001bec:	4611      	mov	r1, r2
20001bee:	2200      	movs	r2, #0
20001bf0:	602a      	str	r2, [r5, #0]
20001bf2:	461a      	mov	r2, r3
20001bf4:	f7fe fca8 	bl	20000548 <_lseek>
20001bf8:	1c43      	adds	r3, r0, #1
20001bfa:	d102      	bne.n	20001c02 <_lseek_r+0x1e>
20001bfc:	682b      	ldr	r3, [r5, #0]
20001bfe:	b103      	cbz	r3, 20001c02 <_lseek_r+0x1e>
20001c00:	6023      	str	r3, [r4, #0]
20001c02:	bd38      	pop	{r3, r4, r5, pc}
20001c04:	20001fc8 	.word	0x20001fc8

20001c08 <_read_r>:
20001c08:	b538      	push	{r3, r4, r5, lr}
20001c0a:	4d07      	ldr	r5, [pc, #28]	@ (20001c28 <_read_r+0x20>)
20001c0c:	4604      	mov	r4, r0
20001c0e:	4608      	mov	r0, r1
20001c10:	4611      	mov	r1, r2
20001c12:	2200      	movs	r2, #0
20001c14:	602a      	str	r2, [r5, #0]
20001c16:	461a      	mov	r2, r3
20001c18:	f7fe fc84 	bl	20000524 <_read>
20001c1c:	1c43      	adds	r3, r0, #1
20001c1e:	d102      	bne.n	20001c26 <_read_r+0x1e>
20001c20:	682b      	ldr	r3, [r5, #0]
20001c22:	b103      	cbz	r3, 20001c26 <_read_r+0x1e>
20001c24:	6023      	str	r3, [r4, #0]
20001c26:	bd38      	pop	{r3, r4, r5, pc}
20001c28:	20001fc8 	.word	0x20001fc8

20001c2c <_sbrk_r>:
20001c2c:	b538      	push	{r3, r4, r5, lr}
20001c2e:	4d06      	ldr	r5, [pc, #24]	@ (20001c48 <_sbrk_r+0x1c>)
20001c30:	2300      	movs	r3, #0
20001c32:	4604      	mov	r4, r0
20001c34:	4608      	mov	r0, r1
20001c36:	602b      	str	r3, [r5, #0]
20001c38:	f7fe fc1a 	bl	20000470 <_sbrk>
20001c3c:	1c43      	adds	r3, r0, #1
20001c3e:	d102      	bne.n	20001c46 <_sbrk_r+0x1a>
20001c40:	682b      	ldr	r3, [r5, #0]
20001c42:	b103      	cbz	r3, 20001c46 <_sbrk_r+0x1a>
20001c44:	6023      	str	r3, [r4, #0]
20001c46:	bd38      	pop	{r3, r4, r5, pc}
20001c48:	20001fc8 	.word	0x20001fc8

20001c4c <_write_r>:
20001c4c:	b538      	push	{r3, r4, r5, lr}
20001c4e:	4d07      	ldr	r5, [pc, #28]	@ (20001c6c <_write_r+0x20>)
20001c50:	4604      	mov	r4, r0
20001c52:	4608      	mov	r0, r1
20001c54:	4611      	mov	r1, r2
20001c56:	2200      	movs	r2, #0
20001c58:	602a      	str	r2, [r5, #0]
20001c5a:	461a      	mov	r2, r3
20001c5c:	f7fe fc58 	bl	20000510 <_write>
20001c60:	1c43      	adds	r3, r0, #1
20001c62:	d102      	bne.n	20001c6a <_write_r+0x1e>
20001c64:	682b      	ldr	r3, [r5, #0]
20001c66:	b103      	cbz	r3, 20001c6a <_write_r+0x1e>
20001c68:	6023      	str	r3, [r4, #0]
20001c6a:	bd38      	pop	{r3, r4, r5, pc}
20001c6c:	20001fc8 	.word	0x20001fc8

20001c70 <_close_r>:
20001c70:	b538      	push	{r3, r4, r5, lr}
20001c72:	4d06      	ldr	r5, [pc, #24]	@ (20001c8c <_close_r+0x1c>)
20001c74:	2300      	movs	r3, #0
20001c76:	4604      	mov	r4, r0
20001c78:	4608      	mov	r0, r1
20001c7a:	602b      	str	r3, [r5, #0]
20001c7c:	f7fe fc5a 	bl	20000534 <_close>
20001c80:	1c43      	adds	r3, r0, #1
20001c82:	d102      	bne.n	20001c8a <_close_r+0x1a>
20001c84:	682b      	ldr	r3, [r5, #0]
20001c86:	b103      	cbz	r3, 20001c8a <_close_r+0x1a>
20001c88:	6023      	str	r3, [r4, #0]
20001c8a:	bd38      	pop	{r3, r4, r5, pc}
20001c8c:	20001fc8 	.word	0x20001fc8

20001c90 <memchr>:
20001c90:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
20001c94:	2a10      	cmp	r2, #16
20001c96:	db2b      	blt.n	20001cf0 <memchr+0x60>
20001c98:	f010 0f07 	tst.w	r0, #7
20001c9c:	d008      	beq.n	20001cb0 <memchr+0x20>
20001c9e:	f810 3b01 	ldrb.w	r3, [r0], #1
20001ca2:	3a01      	subs	r2, #1
20001ca4:	428b      	cmp	r3, r1
20001ca6:	d02d      	beq.n	20001d04 <memchr+0x74>
20001ca8:	f010 0f07 	tst.w	r0, #7
20001cac:	b342      	cbz	r2, 20001d00 <memchr+0x70>
20001cae:	d1f6      	bne.n	20001c9e <memchr+0xe>
20001cb0:	b4f0      	push	{r4, r5, r6, r7}
20001cb2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
20001cb6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
20001cba:	f022 0407 	bic.w	r4, r2, #7
20001cbe:	f07f 0700 	mvns.w	r7, #0
20001cc2:	2300      	movs	r3, #0
20001cc4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
20001cc8:	3c08      	subs	r4, #8
20001cca:	ea85 0501 	eor.w	r5, r5, r1
20001cce:	ea86 0601 	eor.w	r6, r6, r1
20001cd2:	fa85 f547 	uadd8	r5, r5, r7
20001cd6:	faa3 f587 	sel	r5, r3, r7
20001cda:	fa86 f647 	uadd8	r6, r6, r7
20001cde:	faa5 f687 	sel	r6, r5, r7
20001ce2:	b98e      	cbnz	r6, 20001d08 <memchr+0x78>
20001ce4:	d1ee      	bne.n	20001cc4 <memchr+0x34>
20001ce6:	bcf0      	pop	{r4, r5, r6, r7}
20001ce8:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
20001cec:	f002 0207 	and.w	r2, r2, #7
20001cf0:	b132      	cbz	r2, 20001d00 <memchr+0x70>
20001cf2:	f810 3b01 	ldrb.w	r3, [r0], #1
20001cf6:	3a01      	subs	r2, #1
20001cf8:	ea83 0301 	eor.w	r3, r3, r1
20001cfc:	b113      	cbz	r3, 20001d04 <memchr+0x74>
20001cfe:	d1f8      	bne.n	20001cf2 <memchr+0x62>
20001d00:	2000      	movs	r0, #0
20001d02:	4770      	bx	lr
20001d04:	3801      	subs	r0, #1
20001d06:	4770      	bx	lr
20001d08:	2d00      	cmp	r5, #0
20001d0a:	bf06      	itte	eq
20001d0c:	4635      	moveq	r5, r6
20001d0e:	3803      	subeq	r0, #3
20001d10:	3807      	subne	r0, #7
20001d12:	f015 0f01 	tst.w	r5, #1
20001d16:	d107      	bne.n	20001d28 <memchr+0x98>
20001d18:	3001      	adds	r0, #1
20001d1a:	f415 7f80 	tst.w	r5, #256	@ 0x100
20001d1e:	bf02      	ittt	eq
20001d20:	3001      	addeq	r0, #1
20001d22:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
20001d26:	3001      	addeq	r0, #1
20001d28:	bcf0      	pop	{r4, r5, r6, r7}
20001d2a:	3801      	subs	r0, #1
20001d2c:	4770      	bx	lr
20001d2e:	bf00      	nop

20001d30 <memcpy>:
20001d30:	440a      	add	r2, r1
20001d32:	4291      	cmp	r1, r2
20001d34:	f100 33ff 	add.w	r3, r0, #4294967295	@ 0xffffffff
20001d38:	d100      	bne.n	20001d3c <memcpy+0xc>
20001d3a:	4770      	bx	lr
20001d3c:	b510      	push	{r4, lr}
20001d3e:	f811 4b01 	ldrb.w	r4, [r1], #1
20001d42:	f803 4f01 	strb.w	r4, [r3, #1]!
20001d46:	4291      	cmp	r1, r2
20001d48:	d1f9      	bne.n	20001d3e <memcpy+0xe>
20001d4a:	bd10      	pop	{r4, pc}

20001d4c <_realloc_r>:
20001d4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
20001d50:	4607      	mov	r7, r0
20001d52:	4614      	mov	r4, r2
20001d54:	460d      	mov	r5, r1
20001d56:	b921      	cbnz	r1, 20001d62 <_realloc_r+0x16>
20001d58:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
20001d5c:	4611      	mov	r1, r2
20001d5e:	f7ff badb 	b.w	20001318 <_malloc_r>
20001d62:	b92a      	cbnz	r2, 20001d70 <_realloc_r+0x24>
20001d64:	f7ff f906 	bl	20000f74 <_free_r>
20001d68:	4625      	mov	r5, r4
20001d6a:	4628      	mov	r0, r5
20001d6c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
20001d70:	f000 f81a 	bl	20001da8 <_malloc_usable_size_r>
20001d74:	4284      	cmp	r4, r0
20001d76:	4606      	mov	r6, r0
20001d78:	d802      	bhi.n	20001d80 <_realloc_r+0x34>
20001d7a:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
20001d7e:	d8f4      	bhi.n	20001d6a <_realloc_r+0x1e>
20001d80:	4621      	mov	r1, r4
20001d82:	4638      	mov	r0, r7
20001d84:	f7ff fac8 	bl	20001318 <_malloc_r>
20001d88:	4680      	mov	r8, r0
20001d8a:	b908      	cbnz	r0, 20001d90 <_realloc_r+0x44>
20001d8c:	4645      	mov	r5, r8
20001d8e:	e7ec      	b.n	20001d6a <_realloc_r+0x1e>
20001d90:	42b4      	cmp	r4, r6
20001d92:	4622      	mov	r2, r4
20001d94:	4629      	mov	r1, r5
20001d96:	bf28      	it	cs
20001d98:	4632      	movcs	r2, r6
20001d9a:	f7ff ffc9 	bl	20001d30 <memcpy>
20001d9e:	4629      	mov	r1, r5
20001da0:	4638      	mov	r0, r7
20001da2:	f7ff f8e7 	bl	20000f74 <_free_r>
20001da6:	e7f1      	b.n	20001d8c <_realloc_r+0x40>

20001da8 <_malloc_usable_size_r>:
20001da8:	f851 3c04 	ldr.w	r3, [r1, #-4]
20001dac:	1f18      	subs	r0, r3, #4
20001dae:	2b00      	cmp	r3, #0
20001db0:	bfbc      	itt	lt
20001db2:	580b      	ldrlt	r3, [r1, r0]
20001db4:	18c0      	addlt	r0, r0, r3
20001db6:	4770      	bx	lr

20001db8 <currently_pressed_key>:
20001db8:	00ff 0000                                   ....

20001dbc <__sglue>:
20001dbc:	0000 0000 0003 0000 1e84 2000               ........... 

20001dc8 <_impure_ptr>:
20001dc8:	1dcc 2000                                   ... 

20001dcc <_impure_data>:
20001dcc:	0000 0000 1e84 2000 1eec 2000 1f54 2000     ....... ... T.. 
	...
20001e18:	0166 2000 0146 2000 014e 2000 0156 2000     f.. F.. N.. V.. 
20001e28:	015e 2000 3231 4133 3534 4236 3837 4339     ^.. 123A456B789C
20001e38:	3045 4446 656b 2079 7270 7365 6573 3a64     E0FDkey pressed:
20001e48:	2520 0a63 2300 302d 202b 6800 4c6c 6500      %c..#-0+ .hlL.e
20001e58:	6766 4645 0047 3130 3332 3534 3736 3938     fgEFG.0123456789
20001e68:	4241 4443 4645 3000 3231 3433 3635 3837     ABCDEF.012345678
20001e78:	6139 6362 6564 0066                         9abcdef.

20001e80 <heap_end>:
20001e80:	0000 0000                                   ....

20001e84 <__sf>:
	...

20001fbc <__stdio_exit_handler>:
20001fbc:	0000 0000                                   ....

20001fc0 <__lock___arc4random_mutex>:
	...

20001fc1 <__lock___dd_hash_mutex>:
	...

20001fc2 <__lock___tz_mutex>:
	...

20001fc3 <__lock___env_recursive_mutex>:
	...

20001fc4 <__lock___malloc_recursive_mutex>:
	...

20001fc5 <__lock___at_quick_exit_mutex>:
	...

20001fc6 <__lock___atexit_recursive_mutex>:
	...

20001fc7 <__lock___sfp_recursive_mutex>:
	...

20001fc8 <errno>:
20001fc8:	0000 0000                                   ....

20001fcc <__malloc_sbrk_start>:
20001fcc:	0000 0000                                   ....

20001fd0 <__malloc_free_list>:
20001fd0:	0000 0000                                   ....

20001fd4 <__bss_end__>:
	...

20002000 <__heap_low>:
	...

20002400 <__heap_top>:
	...
